<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Loupe.Agent.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Loupe.Agent.AspNetCore.AppBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.AppBuilderExtensions.UseLoupe(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add a Loupe middleware to time requests and log errors.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.AppBuilderExtensions.UseLoupeCookies(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Add Loupe session cookies to all requests
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.ClaimsPrincipalApplicationUserProvider">
            <summary>
            Translate the basic ClaimsPrincipal into an ApplicationUser.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.ClaimsPrincipalApplicationUserProvider.TryGetApplicationUser(System.Security.Principal.IPrincipal,System.Lazy{Gibraltar.Monitor.ApplicationUser})">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Agent.AspNetCore.ClaimsPrincipalResolver">
            <summary>
            Loupe Principal Resolver for ASP.NET Core
            </summary>
            <remarks>Finds the current principal for any activity that's part of an
            active Http request.</remarks>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.ClaimsPrincipalResolver.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Create a new principal resolver
            </summary>
            <param name="contextAccessor"></param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.ClaimsPrincipalResolver.TryResolveCurrentPrincipal(System.Security.Principal.IPrincipal@)">
            <inheritdoc />
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1"/>, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1"/>, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity"/> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1"/>.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1"/>.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1"/> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1"/> that <paramref name="count"/> amount of data was written to the output <see cref="T:System.Span`1"/>/<see cref="T:System.Memory`1"/>
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.DetailBuilders.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.EndpointRouteBuilderExtensions">
            <summary>
            <see cref="!:IEndpointRouteBuilder"/> extensions
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.EndpointRouteBuilderExtensions.AddLoupeClientLogger(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String)">
            <summary>
            Add the Loupe JS client logging endpoint
            </summary>
            <param name="app"></param>
            <param name="pattern">The URL pattern for the endpoint. Defaults to <c>/loupe/log</c></param>
            <returns></returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Extensions.ObjectToString(System.Object,System.Boolean)">
            <summary>
            Process an arbitrary object instance into a string representation.
            </summary>
            <param name="value">An object to represent as a string, such as a return value.</param>
            <param name="getObjectDetails">True to get object details by evaluating ToString() even on class types.
            False to avoid calling ToString() on class types (still used for struct and enum types).</param>
            <returns>A string representing the provided object.</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Extensions.Store(Microsoft.AspNetCore.Http.HttpContext,Loupe.Agent.AspNetCore.Metrics.RequestMetric)">
            <summary>
            Store a request metric into the HTTP context for later use
            </summary>
            <param name="context"></param>
            <param name="metricTracker"></param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Extensions.Retrieve``1(Microsoft.AspNetCore.Http.HttpContext,System.String)">
            <summary>
            Retrieve a request metric from the HTTP context
            </summary>
            <typeparam name="TMetric">The specific type of request metric to return</typeparam>
            <param name="context">The current HTTP context</param>
            <param name="uniqueId">the unique id of the request to retrieve the metric for</param>
            <returns>The request metric or null if it couldn't be found or was of an incompatible type</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Extensions.Store(System.Net.Http.HttpRequestMessage,Loupe.Agent.AspNetCore.Metrics.RequestMetric)">
            <summary>
            Store a request metric into the HTTP context for later use
            </summary>
            <param name="context"></param>
            <param name="metricTracker"></param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Extensions.Retrieve``1(System.Net.Http.HttpRequestMessage)">
            <summary>
            Retrieve a request metric from the HTTP context
            </summary>
            <typeparam name="TMetric">The specific type of request metric to return</typeparam>
            <param name="context">The current HTTP context</param>
            <returns>The request metric or null if it couldn't be found or was of an incompatible type</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Infrastructure.JavaScriptLogger.Log(Loupe.Agent.AspNetCore.Models.LogRequest)">
            <summary>
            Handles logging of the message to Loupe
            </summary>
            <param name="logRequest">A request received from the agent to log information</param>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Loupe.Agent.AspNetCore.Infrastructure.JavaScriptSourceProvider" -->
        <member name="M:Loupe.Agent.AspNetCore.Infrastructure.JavaScriptSourceProvider.ProcessMessage(Loupe.Agent.AspNetCore.Models.LogMessage)">
            <summary>
            Creates a new source provider
            </summary>
            <param name="message">The JavaScript message</param>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.LoupeAgentBuilderExtensions">
            <summary>
            Extension methods for <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/>.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeAgentBuilderExtensions.AddAspNetCoreDiagnostics(Loupe.Agent.Core.Services.ILoupeAgentBuilder)">
            <summary>
            Adds ASP.NET Core diagnostic listeners for standard Loupe metric generation.
            </summary>
            <param name="builder">The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</param>
            <returns>The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeAgentBuilderExtensions.AddAspNetCoreDiagnostics(Loupe.Agent.Core.Services.ILoupeAgentBuilder,System.Func{System.Security.Principal.IPrincipal,System.Lazy{Gibraltar.Monitor.ApplicationUser},System.Boolean})">
            <summary>
            Adds ASP.NET Core diagnostic listeners for standard Loupe metric generation.
            </summary>
            <param name="builder">The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</param>
            <param name="applicationUserFunc">The function to use for application user mapping from an IPrincipal</param>
            <returns>The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeAgentBuilderExtensions.AddAspNetCoreDiagnostics(Loupe.Agent.Core.Services.ILoupeAgentBuilder,System.Func{System.Security.Principal.IPrincipal},System.Func{System.Security.Principal.IPrincipal,System.Lazy{Gibraltar.Monitor.ApplicationUser},System.Boolean})">
            <summary>
            Adds ASP.NET Core diagnostic listeners for standard Loupe metric generation.
            </summary>
            <param name="builder">The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</param>
            <param name="principalFunc">The function to use for IPrincipal resolution</param>
            <param name="applicationUserFunc">Optional. The function to use for application user mapping from an IPrincipal</param>
            <returns>The <see cref="T:Loupe.Agent.Core.Services.ILoupeAgentBuilder"/> instance.</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeAgentBuilderExtensions.AddClientLogging(Loupe.Agent.Core.Services.ILoupeAgentBuilder)">
            <summary>
            Adds services required for client-side logging endpoint
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.LoupeMiddleware">
            <summary>
            ASP.NET Core Middleware to time requests and track errors.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Loupe.Agent.Core.Services.LoupeAgent,Microsoft.AspNetCore.Hosting.IApplicationLifetime)">
            <summary>
            Constructs and instance of <see cref="T:Loupe.Agent.AspNetCore.LoupeMiddleware"/>.
            </summary>
            <param name="next"></param>
            <param name="agent"></param>
            <param name="applicationLifetime"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.LoupeMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            The automagically-called method that processes the request.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> instance for the current request.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that completes when the middleware has processed the request.</returns>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener">
            <summary>
            Listener for ASP.NET Core diagnostics.
            </summary>
            <seealso cref="T:Loupe.Agent.Core.Services.ILoupeDiagnosticListener" />
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.#ctor(Loupe.Agent.Core.Services.LoupeAgent)">
            <summary>
            Initializes a new instance of the <see cref="T:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener"/> class.
            </summary>
            <param name="agent">The Loupe agent.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.BeginRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Called when a request begins.
            </summary>
            <param name="httpContext">The HTTP context.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.EndRequest(Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext)">
            <summary>
            Called when a request ends.
            </summary>
            <param name="httpContext">The HTTP context.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.BeforeOnActionExecution(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before an Action is executed.
            </summary>
            <param name="actionExecutingContext">The action executing context.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.AfterOnActionExecution(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Called after an Action has been executed.
            </summary>
            <param name="actionExecutedContext">The action executed context.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.BeforeOnResourceExecuting(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called before a Resource is executed.
            </summary>
            <param name="resourceExecutingContext">The resource executing context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.AfterOnResourceExecuted(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called after a Resource has been executed.
            </summary>
            <param name="resourceExecutedContext">The resource executed context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.BeforeOnResourceExecution(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called before a Resource is executed.
            </summary>
            <param name="resourceExecutingContext">The resource executing context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.AfterOnResourceExecution(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called after a Resource has been executed.
            </summary>
            <param name="resourceExecutedContext">The resource executed context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.BeforeOnAuthorization(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called before a request is authorized.
            </summary>
            <param name="actionContext">The action context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.AfterOnAuthorization(Loupe.Agent.AspNetCore.Metrics.IProxyActionContext,Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor)">
            <summary>
            Called after request authorization is completed.
            </summary>
            <param name="actionContext">The action context.</param>
            <param name="actionDescriptor">The action descriptor.</param>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.ActionDiagnosticListener.Name">
            <summary>
            Returns the name of the <see cref="T:System.Diagnostics.DiagnosticSource" /> this implementation targets.
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.ActionMetric">
            <summary>
            Metric for an ASP.NET Action invocation
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.ActionMetricFactory">
            <summary>
            Factory to create action metrics for requests as they start
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionMetricFactory.#ctor">
            <summary>
            Create a new action metric factory fur the current applciation
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ActionMetricFactory.Start(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Start a new action metric for the current request
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.IProxyActionContext">
            <summary>
            An interface that will be implemented dynamically by Microsoft.Extensions.Diagnostics.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionContext.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor">
            <summary>
            An interface that will be implemented dynamically by Microsoft.Extensions.Diagnostics.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionDescriptor.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutedContext">
            <summary>
            An interface that will be implemented dynamically by Microsoft.Extensions.Diagnostics.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutedContext.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutedContext.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutingContext">
            <summary>
            An interface that will be implemented dynamically by Microsoft.Extensions.Diagnostics.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutingContext.Exception">
            <summary>
            Gets the exception.
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyActionExecutingContext.HttpContext">
            <summary>
            Gets the HTTP context.
            </summary>
            <value>
            The HTTP context.
            </value>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext">
            <summary>
            An interface that will be implemented dynamically by Microsoft.Extensions.Diagnostics.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext.TraceIdentifier">
            <summary>
            Gets the trace identifier.
            </summary>
            <value>
            The trace identifier.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext.Request">
            <summary>
            Gets the request.
            </summary>
            <value>
            The request.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext.Response">
            <summary>
            Gets the response.
            </summary>
            <value>
            The response.
            </value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.IProxyHttpContext.Features">
            <summary>
            Gets the features.
            </summary>
            <value>
            The features.
            </value>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.MetricValue">
            <summary>
            Provides constants for metric names.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.PageName">
            <summary>
            The page name metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.AbsolutePath">
            <summary>
            The absolute path metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.TotalDuration">
            <summary>
            The total duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.AuthenticateDuration">
            <summary>
            The authenticate duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.AuthorizeRequestDuration">
            <summary>
            The authorize request duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.ResolveRequestCacheDuration">
            <summary>
            The resolve request cache duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.AcquireRequestStateDuration">
            <summary>
            The acquire request state duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.RequestHandlerExecuteDuration">
            <summary>
            The request handler execute duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.ReleaseRequestStateDuration">
            <summary>
            The release request state duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.UpdateRequestCacheDuration">
            <summary>
            The update request cache duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.LogRequestDuration">
            <summary>
            The log request duration metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.ServedFromCache">
            <summary>
            The served from cache metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.QueryString">
            <summary>
            The query string metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.UserName">
            <summary>
            The user name metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.SessionId">
            <summary>
            The session identifier metric name.
            </summary>
        </member>
        <member name="F:Loupe.Agent.AspNetCore.Metrics.MetricValue.AgentSessionId">
            <summary>
            The agent session identifier metric name.
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.ParameterStringFormat">
            <summary>
            Provides methods to format parameter strings.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.ParameterStringFormat.FromList(System.Collections.Generic.IList{Microsoft.AspNetCore.Mvc.Abstractions.ParameterDescriptor})">
            <summary>
            Formats 0, 1 or n parameters as a readable string.
            </summary>
            <param name="actionDescriptorParameters">The action descriptor parameters.</param>
            <returns>A formatted string.</returns>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Metrics.RequestMetric">
            <summary>
            Tracking metric for an ASP.NET controller request
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.StartTimestamp">
            <summary>
            Timestamp the request started
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Duration">
            <summary>
            The duration the request has been running
            </summary>
            <remarks>Once the request has been told to record it the timer duration will stop increasing.</remarks>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Request">
            <summary>
            The controller and action referenced by the request
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.SubCategory">
            <summary>
            Gets/Sets a String which indicates if the Action was an MVC or WebApi action
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.ControllerName">
            <summary>
            Gets/Sets the name of the controller this action belongs to
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.ActionName">
            <summary>
            Gets/sets the name of this action
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.ControllerType">
            <summary>
            The class name of the controller used for the request
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.HttpMethod">
            <summary>
            Gets/Sets the HttpMethod (GET, POST, PUT, DELETE, etc) used for this action.
            </summary>
            <remarks>
            In MVC, some actions (typically an EDIT) have both definition for both GET and
            POST.  This value helps differentiate between those two calls
            </remarks>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Parameters">
            <summary>
            Gets/Sets a String that represents the parameters passed to this action
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.UniqueId">
            <summary>
            The unique Id of this controller &amp; action from the framework; MVC only.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.UserName">
            <summary>
            The user name for the action being performed.
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Exception">
            <summary>
            The exception, if any, thrown at the completion of the routine
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.SessionId">
            <summary>
            Id to identify a user session from the web browser
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.AgentSessionId">
            <summary>
            Id from JavaScript agent for session
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Record">
            <summary>
            Records the metrics for this request
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Metrics.RequestMetric.Record(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Records the metrics for this request
            </summary>
            <param name="actionExecutedContext">The <see cref="T:Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext"/> from ASP.NET Core.</param>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.MethodName">
            <inheritdoc />
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.ClassName">
            <inheritdoc />
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.FileName">
            <inheritdoc />
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Metrics.RequestMetric.LineNumber">
            <inheritdoc />
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.Message">
            <summary>
            The message associated with the error
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.Url">
            <summary>
            The URL upon which the error occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.StackTrace">
            <summary>
            The stack trace
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.Cause">
            <summary>
            Optional. The cause of the error
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.Line">
            <summary>
            Optional. The line number upon which the error occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.ClientSideException.Column">
            <summary>
            Optional. The column number upon which the error occurred
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Models.ClientSideException.IsEmpty">
            <summary>
            Indicates if the class is in fact empty i.e created but with no values
            </summary>
            <remarks>This method is only used by the code creating a <see cref="T:Loupe.Agent.AspNetCore.Models.JavaScriptException"/>
            as such it only needs to know if message and stack trace are not null.
            We need this method as if a request is received with an empty object rather
            than null for Error then JSON.net will create a new empty object with no data
            which we don't want to log.</remarks>
            <returns>true if necessary properties not null; otherwise false</returns>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.Models.JavaScriptException">
            <summary>
            Defines a JavaScript exception
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Models.JavaScriptException.#ctor(System.String)">
            <summary>
            Create a new exception
            </summary>
            <param name="message">The exception message</param>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.Models.JavaScriptException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Create a new exception
            </summary>
            <param name="message">The exception message</param>
            <param name="stackTrace">The stack trace, as a list of strings</param>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.JavaScriptException.StackTrace">
            <summary>
            Show the stack trace for the exception
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.JavaScriptMessageSource.ClassName">
            <summary>
            The name of the class in which the message occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.JavaScriptMessageSource.FileName">
            <summary>
            The name of the file in which the message occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.JavaScriptMessageSource.LineNumber">
            <summary>
            The line number upon which the message occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.JavaScriptMessageSource.MethodName">
            <summary>
            The name of the method in which the message occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Severity">
            <summary>
            Severity of the message
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Category">
            <summary>
            The category to log against
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Caption">
            <summary>
            The log message caption
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Description">
            <summary>
            The log message description
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Parameters">
            <summary>
            Optional. Parameters to be added to the message
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Details">
            <summary>
            Optional. Additional details, such as client browser settings
            </summary>
            <remarks>
            This is converted into the XML details
            </remarks>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Exception">
            <summary>
            Optional. Details of a client side exception
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.MethodSourceInfo">
            <summary>
            Information about the method that generated the message
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.TimeStamp">
            <summary>
            Specifies when the log message was created on the client
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.Sequence">
            <summary>
            Specifics the sequence number of the message
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.SessionId">
            <summary>
            SessionId from either cookie or set by client
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.LogMessage.AgentSessionId">
            <summary>
            Session Id as set by JS Agent when it started
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.MethodSourceInfo.File">
            <summary>
            File that the error occurred in
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.MethodSourceInfo.Class">
            <summary>
            Class that the error occured in
            </summary>
            <value>The class.</value>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.MethodSourceInfo.Method">
            <summary>
            Function that was being executed when error occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.MethodSourceInfo.Line">
            <summary>
            Optional. The line number upon which the error occurred
            </summary>
        </member>
        <member name="P:Loupe.Agent.AspNetCore.Models.MethodSourceInfo.Column">
            <summary>
            Optional. The column number upon which the error occurred
            </summary>
        </member>
        <member name="T:Loupe.Agent.AspNetCore.RoutingExtensions">
            <summary>
            Provides useful extension methods over <see cref="T:Microsoft.AspNetCore.Routing.IRoutingFeature"/>.
            </summary>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.RoutingExtensions.GetRouteString(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Gets the route as a readable string.
            </summary>
            <param name="httpContext">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> instance.</param>
            <returns>A readable string form of the route, if available; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:Loupe.Agent.AspNetCore.RoutingExtensions.GetPageName(Microsoft.AspNetCore.Routing.IRoutingFeature)">
            <summary>
            Gets the page name as a readable string.
            </summary>
            <param name="routing">The <see cref="T:Microsoft.AspNetCore.Routing.IRoutingFeature"/> instance.</param>
            <returns>A readable string form of the page name, if available; otherwise, <c>null</c>.</returns>
        </member>
    </members>
</doc>
