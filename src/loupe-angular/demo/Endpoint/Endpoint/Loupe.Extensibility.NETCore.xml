<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Loupe.Extensibility.NETCore</name>
    </assembly>
    <members>
        <member name="T:Loupe.Configuration.AgentConfiguration">
            <summary>
            The top level configuration class for all Agent configuration. Supplied during a
            Log.Initializing event.
            </summary>
            <remarks>
                This object is created by the agent and supplied to user code during the Log.Initializing event to allow for
                configuration to be determined in code at runtime. This configuration is applied
                over whatever has been configured in the application configuration file.
            </remarks>
            <example>
            	<code lang="CS" title="Programmatic Configuration" description="You can supply some or all of your configuration information during the Log.Initializing event. In this example, the Loupe Server configuration is being done at runtime during this event.">
            		<![CDATA[
            /// <summary>
            /// The primary program entry point.
            /// </summary>
            static class Program
            {
                /// <summary>
                /// The main entry point for the application.
                /// </summary>
                [STAThread]
                public static void Main()
                {
                    Log.Initializing += Log_Initializing;
             
                    Application.EnableVisualStyles();
                    Application.SetCompatibleTextRenderingDefault(false);
                    Thread.CurrentThread.Name = "User Interface Main";  //set the thread name before our first call that logs on this thread.
             
                    Log.StartSession("Starting Gibraltar Analyst");
             
                    //here you actual start up your application
             
                    //and if we got to this point, we done good and can mark the session as being not crashed :)
                    Log.EndSession("Exiting Gibraltar Analyst");
                }
             
                static void Log_Initializing(object sender, LogInitializingEventArgs e)
                {
                    //and configure Loupe Server Connection
                    ServerConfiguration server = e.Configuration.Server;
                    server.UseGibraltarService = true;
                    server.CustomerName = "Gibraltar Software";
                    server.AutoSendSessions = true;
                    server.SendAllApplications = true;
                    server.PurgeSentSessions = true;
                }
            }]]>
            	</code>
            </example>
        </member>
        <member name="M:Loupe.Configuration.AgentConfiguration.#ctor">
            <summary>
            Create a new agent configuration, starting with the application's configuration file data.
            </summary>
        </member>
        <member name="M:Loupe.Configuration.AgentConfiguration.#ctor(Loupe.Configuration.AgentConfiguration)">
            <summary>
            Create a new agent configuration, copying properties from existing one.
            </summary>
            <param name="configuration">An existing agent configuration.</param>
            <remarks>Inferring this from usage in <c>Gibraltar.Agent.Log</c>.</remarks>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Listener">
            <summary>
            The listener configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.SessionFile">
            <summary>The session data file configuration</summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Packager">
            <summary>
            The packager configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Publisher">
            <summary>
            The publisher configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Server">
            <summary>
            The central server configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.NetworkViewer">
            <summary>
            Configures real-time network log streaming
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Performance">
            <summary>
            Performance monitoring options
            </summary>
        </member>
        <member name="P:Loupe.Configuration.AgentConfiguration.Properties">
            <summary>
            Application defined properties
            </summary>
        </member>
        <member name="M:Loupe.Configuration.AgentConfiguration.Sanitize">
            <summary>
            Normalize configuration values
            </summary>
        </member>
        <member name="M:Loupe.Configuration.AgentConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Configuration.IMessengerConfiguration">
            <summary>
            Minimal configuration information for each messenger.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.IMessengerConfiguration.ForceSynchronous">
            <summary>
            When true, the messenger will treat all write requests as write-through requests.
            </summary>
            <remarks>This overrides the write through request flag for all published requests, acting
            as if they are set true.  This will slow down logging and change the degree of parallelism of 
            multithreaded applications since each log message will block until it is committed to every
            configured messenger.</remarks>
        </member>
        <member name="P:Loupe.Configuration.IMessengerConfiguration.MaxQueueLength">
            <summary>
            The maximum number of queued messages waiting to be processed by the messenger
            </summary>
            <remarks>Once the total number of messages waiting to be processed exceeds the
            maximum queue length the messenger will switch to a synchronous mode to 
            catch up.  This will not cause the client to experience synchronous logging
            behavior unless the publisher queue is also filled.</remarks>
        </member>
        <member name="P:Loupe.Configuration.IMessengerConfiguration.Enabled">
            <summary>
            When false, the messenger is disabled even if otherwise configured.
            </summary>
            <remarks>This allows for explicit disable/enable without removing the existing configuration
            or worrying about the default configuration.</remarks>
        </member>
        <member name="P:Loupe.Configuration.IMessengerConfiguration.MessengerTypeName">
            <summary>
            The fully qualified name of the class that implements IMessenger for this messenger
            </summary>
        </member>
        <member name="T:Loupe.Configuration.ListenerConfiguration">
            <summary>
            Configuration information for the trace listener.
            </summary>
        </member>
        <member name="M:Loupe.Configuration.ListenerConfiguration.#ctor">
            <summary>
            Initialize from application configuration section
            </summary>
        </member>
        <member name="P:Loupe.Configuration.ListenerConfiguration.EnableConsole">
            <summary>
            When true, anything written to the console out will be appended to the log.
            </summary>
            <remarks>Disabled by default as ASP.NET Core applications send significant duplicate data to the console.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ListenerConfiguration.EnableNetworkEvents">
            <summary>
            When true, network events (such as reconfiguration and disconnection) will be logged automatically.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.ListenerConfiguration.EnableGCEvents">
            <summary>
            When true, metrics are recorded for Garbage Collector (GC) events.
            </summary>
        </member>
        <member name="M:Loupe.Configuration.ListenerConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Configuration.NetworkViewerConfiguration">
            <summary>
            Network Messenger Configuration
            </summary>
        </member>
        <member name="M:Loupe.Configuration.NetworkViewerConfiguration.#ctor">
            <summary>
            Initialize the network messenger from the application configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.AllowLocalClients">
            <summary>
            True by default, enables connecting a viewer on the local computer when true.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.AllowRemoteClients">
            <summary>
            False by default, enables connecting a viewer from another computer when true.
            </summary>
            <remarks>Requires a server configuration section</remarks>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.MaxQueueLength">
            <summary>
            The maximum number of queued messages waiting to be processed by the network messenger
            </summary>
            <remarks>Once the total number of messages waiting to be processed exceeds the
            maximum queue length unsent messages will be dropped.</remarks>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.Enabled">
            <summary>
            False by default. When false, the network messenger is disabled even if otherwise configured.
            </summary>
            <remarks>This allows for explicit disable/enable without removing the existing configuration
            or worrying about the default configuration.</remarks>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.Loupe#Configuration#IMessengerConfiguration#ForceSynchronous">
            <summary>
            When true, the session file will treat all write requests as write-through requests.
            </summary>
            <remarks>This overrides the write through request flag for all published requests, acting
            as if they are set true.  This will slow down logging and change the degree of parallelism of 
            multithreaded applications since each log message will block until it is committed.</remarks>
        </member>
        <member name="M:Loupe.Configuration.NetworkViewerConfiguration.Sanitize">
            <summary>
            Normalize configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.NetworkViewerConfiguration.Loupe#Configuration#IMessengerConfiguration#MessengerTypeName">
            <inheritdoc />
        </member>
        <member name="M:Loupe.Configuration.NetworkViewerConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Configuration.PackagerConfiguration">
            <summary>
            The configuration of the packager.
            </summary>
        </member>
        <member name="F:Loupe.Configuration.PackagerConfiguration.DefaultHotKey">
            <summary>
            The default HotKey configuration string for the packager.
            </summary>
        </member>
        <member name="M:Loupe.Configuration.PackagerConfiguration.#ctor">
            <summary>
            Initialize the packager configuration from the application configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.HotKey">
            <summary>
            The key sequence used to pop up the packager.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.AllowFile">
            <summary>
            When true the user will be allowed to save the package to a file.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.AllowRemovableMedia">
            <summary>
            When true the user will be allowed to save the package directly to the root of a removable media volume
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.AllowEmail">
            <summary>
            When true the user will be allowed to send the package via email
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.AllowServer">
            <summary>
            When true the user will be allowed to send sessions to a session data server
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.FromEmailAddress">
            <summary>
            The email address to use as the sender&apos;s address
            </summary>
            <remarks>If specified, the user will not be given the option to override it.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.DestinationEmailAddress">
            <summary>
            The address to send the email to.
            </summary>
            <remarks>If specified, the user will not be given the option to override it.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.ProductName">
            <summary>
            The product name to use instead of the current application.
            </summary>
            <remarks>Primarily used in the Packager.exe.config file to specify the end-user product and application
            you want to package information for instead of the current application.  If specified, the name
            must exactly match the name shown in Loupe for the product.
            <para>To limit the package to one application within a product specify the applicationName as well
            as the productName.  Specifying just the product name will cause the package to contain all applications
            for the specified product.</para></remarks>
        </member>
        <member name="P:Loupe.Configuration.PackagerConfiguration.ApplicationName">
            <summary>
            The application name to use instead of the current application.
            </summary>
            <remarks><para>Primarily used in the Packager.exe.config file to specify the end-user application
            you want to package information for instead of the current application.  If specified, the name
            must exactly match the name shown in Loupe for the application.</para>
            <para>Application name is ignored if product name is not also specified.</para></remarks>
        </member>
        <member name="M:Loupe.Configuration.PackagerConfiguration.Sanitize">
            <summary>
            Normalize the configuration options
            </summary>
        </member>
        <member name="T:Loupe.Configuration.PublisherConfiguration">
            <summary>
            The configuration of the publisher.
            </summary>
        </member>
        <member name="M:Loupe.Configuration.PublisherConfiguration.#ctor">
            <summary>
            Initialize the publisher from the application configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ProductName">
            <summary>
            Optional.  The name of the product for logging purposes.
            </summary>
            <remarks>Generally unnecessary for windows services, console apps, and WinForm applications.
            Useful for web applications where there is no reasonable way of automatically determining
            product name from the assemblies that initiate logging.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ApplicationDescription">
            <summary>
            Optional.  A description of the application to include with the session information.
            </summary>
            <remarks>Generally unnecessary for windows services, console apps, and WinForm applications.
            Useful for web applications where there is no reasonable way of automatically determining
            application description from the assemblies that initiate logging.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ApplicationName">
            <summary>
            Optional.  The name of the application for logging purposes.
            </summary>
            <remarks>Generally unnecessary for windows services, console apps, and WinForm applications.
            Useful for web applications where there is no reasonable way of automatically determining
            product name from the assemblies that initiate logging.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ApplicationType">
            <summary>
            Optional.  The ApplicationType to treat the application as, overriding the Agent's automatic determination.
            </summary>
            <remarks>This setting is not generally necessary as the Agent will automatically determine the application
            type correctly in most typical windows services, console apps, WinForm applications, and ASP.NET applications.
            If the automatic determination is unsuccessful or incorrect with a particular application, the correct type
            can be configured with this setting to bypass the automatic determination.  However, setting this incorrectly
            for the application could have undesirable effects.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ApplicationVersion">
            <summary>
            Optional.  The version of the application for logging purposes.
            </summary>
            <remarks><para>Generally unnecessary for windows services, console apps, and WinForm applications.
            Useful for web applications where there is no reasonable way of automatically determining
            product name from the assemblies that initiate logging.</para></remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ApplicationVersionNumber">
            <summary>
            We need this to load from JSON, because there's currently no custom binding
            and the standard binder doesn't use Version.Parse.
            </summary>
            <remarks>Added Attributes to hide in IntelliSense.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.EnvironmentName">
            <summary>
            Optional.  The environment this session is running in.
            </summary>
            <remarks>Environments are useful for categorizing sessions, for example to 
            indicate the hosting environment. If a value is provided it will be 
            carried with the session data to upstream servers and clients.  If the 
            corresponding entry does not exist it will be automatically created.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.PromotionLevelName">
            <summary>
            Optional.  The promotion level of the session.
            </summary>
            <remarks>Promotion levels are useful for categorizing sessions, for example to 
            indicate whether it was run in development, staging, or production. 
            If a value is provided it will be carried with the session data to upstream servers and clients.  
            If the corresponding entry does not exist it will be automatically created.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.ForceSynchronous">
            <summary>
            When true, the publisher will treat all publish requests as write-through requests.
            </summary>
            <remarks>This overrides the write through request flag for all published requests, acting
            as if they are set true.  This will slow down logging and change the degree of parallelism of 
            multithreaded applications since each log message will block until it is committed to every
            configured messenger.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.MaxQueueLength">
            <summary>
            The maximum number of queued messages waiting to be published.
            </summary>
            <remarks>Once the total number of messages waiting to be published exceeds the
            maximum queue length the log publisher will switch to a synchronous mode to 
            catch up.  This will cause the client to block until each new message is published.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.EnableAnonymousMode">
            <summary>
            When true, the Agent will record session data without collecting personally-identifying information.
            </summary>
            <remarks>In anonymous mode the Agent will not collect personally-identifying information such as user name,
            user domain name, host name, host domain name, and the application's command line.  Anonymous mode is disabled
            by default, and normal operation will collect this information automatically.</remarks>
        </member>
        <member name="P:Loupe.Configuration.PublisherConfiguration.EnableDebugMode">
            <summary>
            When true, the Agent will include debug messages in logs. Not intended for production use
            </summary>
            <remarks><para>Normally the Agent will fail silently and otherwise compensate for problems to ensure
            that it does not cause a problem for your application. When you are developing your application 
            you can enable this mode to get more detail about why th Agent is behaving as it is and resolve
            issues.</para>
            <para>In debug mode the agent may throw exceptions to indicate calling errors it normally would 
            just silently ignore. Therefore, this option is not recommended for consistent production use.</para></remarks>
        </member>
        <member name="M:Loupe.Configuration.PublisherConfiguration.Sanitize">
            <summary>
            Normalize configuration data
            </summary>
        </member>
        <member name="M:Loupe.Configuration.PublisherConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Configuration.ServerConfiguration">
            <summary>
            The application configuration information for sending session data to a Loupe Server
            </summary>
            <remarks>
            	<para>To configure integration with the Loupe Server you need to either:</para>
            	<list type="bullet">
            		<item>
                        Set the <see cref="P:Loupe.Configuration.ServerConfiguration.UseGibraltarService">UseGibraltarService</see> option to
                        True and specify a <see cref="P:Loupe.Configuration.ServerConfiguration.CustomerName">CustomerName</see>
            		</item>
            		<item>
                        Set the <see cref="P:Loupe.Configuration.ServerConfiguration.UseGibraltarService">UseGibraltarService</see> option to
                        False and specify a <see cref="P:Loupe.Configuration.ServerConfiguration.Server">Server</see>
            		</item>
            	</list>
            	<para><strong>Using the Gibraltar Loupe Service</strong></para>
            	<para>Just set the UseGibraltarService option to True and specify your Account name
                which you can find at <a href="http://www.GibraltarSoftware.com">www.GibraltarSoftware.com</a>.</para>
            	<para><strong>Using a Private Loupe Server</strong></para>
            	<para>You will need to know the connection information from when the server was
                installed to correctly configure some or all of the following values:</para>
            	<list type="bullet">
            		<item><strong>Server (required):</strong> The full DNS name of the computer
                    hosting the Loupe Server.</item>
            		<item><strong>ApplicationBaseDirectory (optional):</strong> The virtual
                    directory on the server where the Loupe Server is installed. It may be empty,
                    indicating the server is installed in the root of its web site.</item>
            		<item><strong>UseSsl (optional):</strong> Defaults to false; indicates if the
                    connection with the server should be encrypted using Secure Sockets Layer
                    (SSL). If no port is specified then port 443 (the standard for SSL) will be
                    used.</item>
            		<item><strong>Port (optional):</strong> Used to specify a nonstandard port to
                    communicate with the server.</item>
            	</list>
            	<para><strong>Automatically Sending Sessions</strong></para>
            	<para>The server configuration is used both to establish the connection information
                for the Loupe Server for on-demand transfer (such as with the Packager Dialog or
                Packager class) and also for automatic background session transfer. To enable
                automatic background transfer of all sessions:</para>
            	<list type="bullet">
            		<item>
                        Set the <see cref="P:Loupe.Configuration.ServerConfiguration.AutoSendSessions">AutoSendSessions</see> option to True
                    </item>
            		<item>
                        Optionally set the <see cref="P:Loupe.Configuration.ServerConfiguration.SendAllApplications">SendAllApplications</see> option to send session data
                        for any application that shares the same Product name as the current
                        application.
                    </item>
            		<item>
                        Optionally set the <see cref="P:Loupe.Configuration.ServerConfiguration.PurgeSentSessions">PurgeSentSessions</see>
                        option to True to remove sessions from the local computer once they have
                        been successfully sent to the Loupe Server.
                    </item>
            	</list>
            	<para><strong>Testing your Configuration</strong></para>
            	<para>
                    You can validate the current configuration at runtime by calling the <see cref="M:Loupe.Configuration.ServerConfiguration.Validate">Validate</see> method. If there are any problems with the
                    configuration data an exception will be thrown describing the issue. Some
                    problems (like an invalid customer name or server name) may not be fully
                    detectable in this routine.
                </para>
            	<para>
                    If the configuration is not valid the <see cref="P:Loupe.Configuration.ServerConfiguration.Enabled">Enabled</see>
                    property is automatically set to False at the end of the Log.Initializing event. This isn't
                    checked until the end of the initialization cycle so properties can be set in
                    any order.
                </para>
            </remarks>
            <example>
            	<code lang="CS" title="Server Programmatic Configuration" description="You can configure the entire Loupe Server connection in the Log Initializing event of your application (not recommended for ASP.NET)">
            		<![CDATA[
            /// <summary>
            /// The primary program entry point.
            /// </summary>
            static class Program
            {
                /// <summary>
                /// The main entry point for the application.
                /// </summary>
                [STAThread]
                public static void Main()
                {
                    Log.Initializing += Log_Initializing;
             
                    Application.EnableVisualStyles();
                    Application.SetCompatibleTextRenderingDefault(false);
                    Thread.CurrentThread.Name = "User Interface Main";  //set the thread name before our first call that logs on this thread.
             
                    Log.StartSession("Starting Loupe Desktop");
             
                    //here you actually start up your application
             
                    //and if we got to this point, we done good and can mark the session as being not crashed :)
                    Log.EndSession("Exiting Loupe Desktop");
                }
             
                static void Log_Initializing(object sender, LogInitializingEventArgs e)
                {
                    //and configure Loupe Server Connection
                    ServerConfiguration server = e.Configuration.Server;
                    server.UseGibraltarService = true;
                    server.CustomerName = "Gibraltar Software";
                    server.AutoSendSessions = true;
                    server.SendAllApplications = true;
                    server.PurgeSentSessions = true;
                }
            }]]>
            	</code>
            </example>
        </member>
        <member name="M:Loupe.Configuration.ServerConfiguration.#ctor">
            <summary>
            Initialize the server configuration from the application configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.Enabled">
            <summary>
            True by default, disables server communication when false.
            </summary>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.AutoSendSessions">
            <summary>
            Indicates whether to automatically send session data to the server in the background.
            </summary>
            <remarks>Defaults to false, indicating data will only be sent on request via packager.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.AutoSendOnError">
            <summary>
            Indicates whether to automatically send data to the server when error or critical messages are logged.
            </summary>
            <remarks>Defaults to true, indicating if the Auto Send Sessions option is also enabled data will be sent
            to the server after an error occurs (unless overridden by the MessageAlert event).</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.SendAllApplications">
            <summary>
            Indicates whether to send data about all applications for this product to the server or just this application (the default)
            </summary>
            <remarks>Defaults to false, indicating just the current applications data will be sent.  Requires that AutoSendSessions is enabled.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.PurgeSentSessions">
            <summary>
            Indicates whether to remove sessions that have been sent from the local repository once confirmed by the server.
            </summary>
            <remarks>Defaults to false.  Requires that AutoSendSessions is enabled.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.ApplicationKey">
            <summary>
            The application key to use to communicate with the Loupe Server
            </summary>
            <remarks>Application keys identify the specific repository and optionally an application environment service
            for this session's data to be associated with.  The server administrator can determine by application key
            whether to accept the session data or not.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.CustomerName">
            <summary>
            The unique customer name when using the Gibraltar Loupe Service
            </summary>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.UseGibraltarService">
            <summary>
            Indicates if the Gibraltar Loupe Service should be used instead of a private Loupe Server
            </summary>
            <remarks>If true then the customer name must be specified.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.UseSsl">
            <summary>
            Indicates if the connection to the Loupe Server should be encrypted with Ssl. 
            </summary>
            <remarks>Only applies to a private Loupe Server.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.Server">
            <summary>
            The full DNS name of the server where the Loupe Server is located
            </summary>
            <remarks>Only applies to a private Loupe Server.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.Port">
            <summary>
             An optional port number override for the server
            </summary>
            <remarks>Not required if the port is the traditional port (80 or 443).  Only applies to a private Loupe Server.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.ApplicationBaseDirectory">
            <summary>
            The virtual directory on the host for the private Loupe Server
            </summary>
            <remarks>Only applies to a private Loupe Server.</remarks>
        </member>
        <member name="P:Loupe.Configuration.ServerConfiguration.Repository">
            <summary>
            The specific repository on the server to send the session to
            </summary>
            <remarks>Only applies to a private Loupe Server running Enterprise Edition.</remarks>
        </member>
        <member name="M:Loupe.Configuration.ServerConfiguration.Validate">
            <summary>
            Check the current configuration information to see if it's valid for a connection, throwing relevant exceptions if not.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the configuration is invalid with the specific problem indicated in the message</exception>
        </member>
        <member name="M:Loupe.Configuration.ServerConfiguration.Sanitize">
            <summary>
            Normalize the configuration data
            </summary>
        </member>
        <member name="M:Loupe.Configuration.ServerConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Configuration.SessionFileConfiguration">
            <summary>
            File Messenger Configuration
            </summary>
        </member>
        <member name="M:Loupe.Configuration.SessionFileConfiguration.#ctor">
            <summary>
            Initialize the session file configuration from the application configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.AutoFlushInterval">
            <summary>
            The maximum number of seconds data can be held before it is flushed.
            </summary>
            <remarks>In addition to the default automatic flush due to the amount of information waiting to be written out 
            the messenger will automatically flush to disk based on the number of seconds specified.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.Folder">
            <summary>
            The folder to store session files in unless explicitly overridden at runtime.
            </summary>
            <remarks>If null or empty, files will be stored in a central local application data folder which is the preferred setting.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.IndexUpdateInterval">
            <summary>
            The number of seconds between index updates.
            </summary>
            <remarks>An index is maintained of session information including the number and types
            of messages and session status.  It is updated automatically when a session is stopped
            and in some other situations.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MaxFileSize">
            <summary>
            The maximum number of megabytes in a single session file before a new file is started.
            </summary>
            <remarks>When the file reaches the maximum size it will be closed and a new file started. 
            Due to compression effects and other data storage considerations, final files may end up slightly 
            larger on disk or somewhat smaller.  Setting to zero will allow files to grow to the maximum
            size allowed by the file format (2 GB)</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MaxFileDuration">
            <summary>
            The maximum number of minutes in a single session file before a new file is started.
            </summary>
            <remarks>When the file reaches the maximum age it will be closed and a new file started.  Setting to zero
            will allow the file to cover an unlimited period of time.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.EnableFilePruning">
            <summary>
            When true, session files will be pruned for size or age.
            </summary>
            <remarks>By default session files older than a specified number of days are automatically
            deleted and the oldest files are removed when the total storage of all files for the same application
            exceeds a certain value.  Setting this option to false will disable pruning.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MaxLocalDiskUsage">
            <summary>
            The maximum number of megabytes for all log files in megabytes on the local drive before older files are purged.
            </summary>
            <remarks><para>When the maximum local disk usage is approached, files are purged by selecting the oldest files first.
            This limit may be exceeded temporarily by the maximum log size because the active file will not be purged.
            Size is specified in megabytes.</para>
            <para>Setting to any integer less than 1 will disable pruning by disk usage.</para></remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MaxLocalFileAge">
            <summary>
            The number of days that log files are retained.
            </summary>
            <remarks>
              <para>Log files that were collected longer than the retention interval ago will be removed regardless of space constraints.</para>
              <para>Setting to any integer less than 1 will disable pruning by age.</para>
            </remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MinimumFreeDisk">
            <summary>
            The minimum amount of free disk space for logging.
            </summary>
            <remarks>If the amount of free disk space falls below this value, existing log files will be removed to free space.
            If no more log files are available, logging will stop until adequate space is freed.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.ForceSynchronous">
            <summary>
            When true, the session file will treat all write requests as write-through requests.
            </summary>
            <remarks>This overrides the write through request flag for all published requests, acting
            as if they are set true.  This will slow down logging and change the degree of parallelism of 
            multithreaded applications since each log message will block until it is committed.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.MaxQueueLength">
            <summary>
            The maximum number of queued messages waiting to be processed by the session file
            </summary>
            <remarks>Once the total number of messages waiting to be processed exceeds the
            maximum queue length the session file will switch to a synchronous mode to 
            catch up.  This will not cause the application to experience synchronous logging
            behavior unless the publisher queue is also filled.</remarks>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.Enabled">
            <summary>
            When false, the session file is disabled even if otherwise configured.
            </summary>
            <remarks>This allows for explicit disable/enable without removing the existing configuration
            or worrying about the default configuration.</remarks>
        </member>
        <member name="M:Loupe.Configuration.SessionFileConfiguration.Sanitize">
            <summary>
            Normalize the configuration
            </summary>
        </member>
        <member name="P:Loupe.Configuration.SessionFileConfiguration.Loupe#Configuration#IMessengerConfiguration#MessengerTypeName">
            <inheritdoc />
        </member>
        <member name="M:Loupe.Configuration.SessionFileConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Agent.PerformanceCounters.PerformanceConfiguration">
            <summary>
            Configuration information for performance monitoring
            </summary>
        </member>
        <member name="M:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.#ctor">
            <summary>
            Initialize a default performance monitoring configuration
            </summary>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.Enabled">
            <summary>
            Enable or disable loading the performance monitor
            </summary>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.EnableProcessMetrics">
            <summary>
            When true, process performance information will be automatically captured for the current process
            </summary>
            <remarks>This includes basic information on processor and memory utilization for the running process.</remarks>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.EnableDiskMetrics">
            <summary>
            When true, disk performance information will be automatically captured
            </summary>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.EnableMemoryMetrics">
            <summary>
            When true, extended .NET memory utilization information will be automatically captured
            </summary>
            <remarks>The extended information is primarily useful for narrowing down memory leaks.  Basic 
            memory utilization information (sufficient to identify if a leak is likely) is captured 
            as part of the EnableProcessPerformance option.</remarks>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.EnableNetworkMetrics">
            <summary>
            When true, network performance information will be automatically captured
            </summary>
        </member>
        <member name="P:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.EnableSystemMetrics">
            <summary>
            When true, system performance information will be automatically captured
            </summary>
        </member>
        <member name="M:Loupe.Agent.PerformanceCounters.PerformanceConfiguration.ToString">
            <inheritdoc />
        </member>
        <member name="T:Loupe.Extensibility.Data.ApplicationType">
            <summary>
            The type of process the application was run as.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationType.Unknown">
            <summary>
            The application type couldn't be determined.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationType.Console">
            <summary>
            A windows console application.  Can also include windows services running in console mode.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationType.Windows">
            <summary>
            A Windows Smart Client application (a traditional windows application)
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationType.Service">
            <summary>
            A Windows Service application.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationType.AspNet">
            <summary>
            A Web Application running in the ASP.NET framework.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ApplicationUserMode">
            <summary>
            The user tracking mode for an application
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationUserMode.None">
            <summary>
            User tracking is disabled for this application
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationUserMode.SingleUser">
            <summary>
            The application runs as a single user which is the process user
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.ApplicationUserMode.MultiUser">
            <summary>
            The application can impersonate many users
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.EventMetricValueTrend">
            <summary>
            Indicates the default way to interpret multiple values for display purposes
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.EventMetricValueTrend.Average">
            <summary>
            Average all of the values within each sample range to determine the displayed value.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.EventMetricValueTrend.Sum">
            <summary>
            Add all of the values within each sample range to determine the displayed value.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.EventMetricValueTrend.RunningAverage">
            <summary>
            An average of all values up through the end of the sample range.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.EventMetricValueTrend.RunningSum">
            <summary>
            The sum of all values up through the end of the sample range.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.EventMetricValueTrend.Count">
            <summary>
            The number of values within each sample range.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IApplicationEvent">
            <summary>
            Distinct warnings and errors within an application
            </summary>
            <remarks>An Application Event aggregates similar log events together within a single application.
            A fingerprint is calculated for each log message.  Within a single session all of the log messages with 
            the same signature are grouped together into a Log Event.  All of the Log Events with the same fingerprint 
            within the same Application are grouped together in the same Application Event.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Id">
            <summary>
            The unique key of this application event
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Uri">
            <summary>
            The link to this item on the server
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Caption">
            <summary>
            The short display caption for this event
            </summary>
            <remarks>Limited to 120 characters.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.FingerprintHash">
            <summary>
            The unique fingerprint of this application event within the application
            </summary>
            <remarks>Each application event has a fingerprint which is used to associate similar log events
            with the same application event.  There will only be one application event with a given fingerprint
            for a specific application.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Severity">
            <summary>
            The severity of all the log messages associated with this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.SeverityDisplay">
            <summary>
            Display caption and description for the severity
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.SessionCount">
            <summary>
            The total number of sessions this event has occurred in
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.OccurrenceCount">
            <summary>
            The total number of occurrences of log messages that occurred which match this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.ApplicationUserCount">
            <summary>
            The total number of distinct users affected by this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.IsSuppressed">
            <summary>
            True if this event has been suppressed, ensuring new occurrences will not cause it to be marked for review.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.ComputerCount">
            <summary>
            The number of computers that have recorded this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.ForReview">
            <summary>
            True if this event has been queued for review to determine if it should be converted to an issue, suppressed, or deferred.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.LastOccurrenceTimestamp">
            <summary>
            The timestamp of the very last log message related to this application event
            </summary>
            <remarks>This will be associated with the LastLogEvent</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.FirstOccurrenceTimestamp">
            <summary>
            The timestamp of the very first log message related to this application event
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Application">
            <summary>
            The application this event is associated with
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.FirstVersion">
            <summary>
            The earliest version that this application event has been found in.
            </summary>
            <remarks>In this case First means the first version, not the version of the first occurrence.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.LastVersion">
            <summary>
            The latest version that this application event has been found in.
            </summary>
            <remarks>In this case Last means the last version, not the version of the last occurrence.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.MaxReleaseType">
            <summary>
            The highest release type, based on sequence
            </summary>
            <remarks>Higher release types are more important, typically indicating a version that has gone farther through the promotion or publication process</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.Issue">
            <summary>
            Optional.  The Issue this application event is related to, if any.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationEvent.GetLogEvents">
            <summary>
            Get an enumerable for all of the log events related to this application event
            </summary>
            <returns></returns>
            <remarks>Since there may be a very large number of log events and they may each contain significant
            data callers are advised to process these in a streaming fashion - evaluating each as you go.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationEvent.GetComputers">
            <summary>
            Get an enumerable for all of the computers related to this application event
            </summary>
            <returns></returns>
            <remarks>Since there may be a very large number of computers and they may each contain significant
            data callers are advised to process these in a streaming fashion - evaluating each as you go.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationEvent.GetSessions">
            <summary>
            Get an enumerable for all of the sessions related to this application event
            </summary>
            <returns></returns>
            <remarks>Since there may be a very large number of sessions and they may each contain significant
            data callers are advised to process these in a streaming fashion - evaluating each as you go.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.LastComputer">
            <summary>
            The last computer (by timestamp) to report a log message associated with this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.LastApplicationUser">
            <summary>
            The last application user (by timestamp) to experience a log message associated with this event.
            </summary>
            <remarks>Only available if the application tracks users and this event occurred to a specific user.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationEvent.LastLogEvent">
            <summary>
            The last log event (by timestamp) that reported this event
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationEvent.AddIssue(System.String,System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a new issue with this application event
            </summary>
            <param name="caption">A summary display caption for the new issue.  Limited to 120 characters.</param>
            <param name="description">An extended description of the issue.</param>
            <param name="workaround">Optional.  A workaround to the problem.</param>
            <param name="activate">True if the issue should be created in the Active status instead of New.</param>
            <param name="isPublic">True if the issue should be visible to anonymous users</param>
            <param name="publicCaption">Optional.  Alternate summary display caption for anonymous public users.  Limited to 120 characters.</param>
            <param name="publicDescription">Optional.  Alternate extended description of the issue for anonymous public users.</param>
            <param name="publicWorkaround">Optional.  Alternate workaround for the problem for anonymous public users.</param>
            <param name="note">Optional.  An issue note to record with the creation</param>
            <param name="assignedUserName">Optional.  The user to assign the issue to.  If null it will be left unassigned.</param>
            <param name="userName">Optional.  The user that is performing the action</param>
            <returns>The new issue</returns>
            <remarks>The application event must not be already related to an issue.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IApplicationUser">
            <summary>
            A single user of one of the applications in this repository
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.Key">
            <summary>
            Optional.  The authoritative key provided by the Agent for this user.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.FullyQualifiedUserName">
            <summary>
            The fully qualified user name as originally provided (E.g. DOMAIN\User or user@domain)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.Caption">
            <summary>
            A display caption for the user - often their full name.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.EmailAddress">
            <summary>
            The email address used to communicate with the user.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.Phone">
            <summary>
            The phone number or other telecommunication alias for the user.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.Organization">
            <summary>
            Optional. The organization this user belongs to - such as a customer.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.Title">
            <summary>
            Optional.  A title for the user (e.g. job title)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IApplicationUser.TimeZoneCode">
            <summary>
            Optional.  The time zone the user is associated with
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IApplicationUserCollection">
            <summary>
            A read-only collection of information describing one or more users.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationUserCollection.Clear">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationUserCollection.Add(Loupe.Extensibility.Data.IApplicationUser)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationUserCollection.Remove(Loupe.Extensibility.Data.IApplicationUser)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationUserCollection.Insert(System.Int32,Loupe.Extensibility.Data.IApplicationUser)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IApplicationUserCollection.RemoveAt(System.Int32)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IAssemblyInfo">
            <summary>
             Detail about .NET assemblies loaded into the session
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Session">
            <summary>
            The session this assembly was recorded as part of
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Caption">
            <summary>
            A display caption for the assembly.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Description">
            <summary>
            The full name of the assembly.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Id">
            <summary>
            The unique Id of this assembly information within the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.CultureName">
            <summary>
            The standard full name for the culture (like EN-US)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.FullName">
            <summary>
            The full name for the assembly, generally unique within an application domain.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.ImageRuntimeVersion">
            <summary>
            The .NET Runtime version the assembly image was compiled against.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Location">
            <summary>
            The full location to the assembly.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Name">
            <summary>
            The short name of the assembly (typically the same as the file name without extension).  Not unique within an application domain.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.ProcessorArchitecture">
            <summary>
            The processor architecture the assembly was compiled for.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.GlobalAssemblyCache">
            <summary>
            Indicates of the assembly was loaded out of the Global Assembly Cache.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.Version">
            <summary>
            The Assembly Version that was loaded.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.FileVersion">
            <summary>
            The file version recorded in the manifest assembly, if available.  May be null.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IAssemblyInfo.LoadedTimeStamp">
            <summary>
            The date &amp; time the assembly was loaded by the runtime.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IAssemblyInfoCollection">
            <summary>
            A read-only collection of information describing the assemblies loaded by the session.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IAssemblyInfoCollection.Clear">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IAssemblyInfoCollection.Add(Loupe.Extensibility.Data.IAssemblyInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IAssemblyInfoCollection.Remove(Loupe.Extensibility.Data.IAssemblyInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IAssemblyInfoCollection.Insert(System.Int32,Loupe.Extensibility.Data.IAssemblyInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IAssemblyInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IComputer">
            <summary>
            A single unique computer that has sent information to Loupe
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.Id">
            <summary>
            The unique Id assigned to the computer
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.Uri">
            <summary>
            The link to this item on the server
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.Caption">
            <summary>
            Optional.  A configured display cation that overrides the full host name.
            </summary>
            <remarks>When specified, the DisplayCaption will reflect this value instead of the host name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.DisplayCaption">
            <summary>
            The display label for this computer, taking the host name and configuration into account
            </summary>
            <remarks>Typically this is the host name however users can specify an alternate value to use instead.
            This property takes into account the host name and configuration.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.FullHostName">
            <summary>
            The most recent full host name (computer plus DNS Domain) seen for this computer
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.LastContactTimestamp">
            <summary>
            The timestamp of the last time this computer has contacted the server
            </summary>
            <remarks>This is the time as seen by the server and not necessarily the ending 
            timestamp of the last log received</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.Environment">
            <summary>
            Optional.  An override environment to use instead of the value specified in the session (if any)
            </summary>
            <remarks>If specified, this environment is used instead of the environment in any session that is
            received for any application.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IComputer.PromotionLevel">
            <summary>
            Optional.  An override promotion level to use instead of the value specified in the session (if any)
            </summary>
            <remarks>If specified, this promotion level is used instead of the level in any session that is
            received for any application, or the promotion level specified on an application version.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IComputer.GetSessions">
            <summary>
            Get an enumerable for all of the sessions related to this application event
            </summary>
            <returns>An enumerable that will iterate over all of the sessions</returns>
            <remarks>Since there may be a very large number of sessions and they may each contain significant
            data callers are advised to process these in a streaming fashion - evaluating each as you go.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IDisplay">
            <summary>
            A standard interface for ensuring an item can be displayed in user interfaces by providing an end user short caption and long description
            </summary>
            <remarks>Captions should be as short as feasible, typically less than 80 characters.  Descriptions can be considerably longer, but neither should
            have embedded formatting outside of normal carriage return and line feed.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IDisplay.Caption">
            <summary>
            A short end-user display caption 
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IDisplay.Description">
            <summary>
            An extended description without formatting.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEnvironment">
            <summary>
            A set of related computers operating together to provide a set of applications
            </summary>
            <remarks>An environment typically denotes a hosting environment - like the set of 
            computers located in a particular data center or region of a data center.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEnvironment.Name">
            <summary>
            The unique name of this environment, used to refer to it in a session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEnvironment.Sequence">
            <summary>
            The order of display for this environment in the set of environments
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEnvironment.Caption">
            <summary>
            The display caption for this environment.
            </summary>
            <remarks>This value can be edited to change how the environment displays.  It defaults
            to the name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEnvironment.Description">
            <summary>
            Optional. A description of this environment.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEventMetric">
            <summary>
            A single event metric instance object, representing one instance of an event metric definition.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IEventMetric.CalculateValues(Loupe.Extensibility.Data.MetricSampleInterval,System.Int32,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},Loupe.Extensibility.Data.IEventMetricValueDefinition)">
            <summary>
            Compute displayable values based on the full information captured for this metric
            </summary>
            <remarks>
            The raw values may not be suitable for display depending on the unit the values are captured in, and
            depending on how the data was sampled it may not display well because of uneven sampling if processed
            directly.
            </remarks>
            <param name="interval">The requested data sample size</param>
            <param name="intervals">The number of intervals to have between each value exactly.</param>
            <param name="startDateTime">The earliest date to retrieve data for</param>
            <param name="endDateTime">The last date to retrieve data for</param>
            <param name="trendValue">The specific event metric value to trend</param>
            <returns>A metric value set suitable for display</returns>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEventMetricDefinition">
            <summary>
            The definition of an event metric, necessary before any specific metric can be created.
            </summary>
            <remarks>
            A sampled metric always has a value for any timestamp between its start and end timestamps.
            It presumes any interim value by looking at the best fit sampling of the real world value
            and assuming it covers the timestamp in question.  It is therefore said to be contiguous for 
            the range of start and end.  Event metrics are only defined at the instant they are timestamped, 
            and imply nothing for other timestamps.  
            For sampled metrics, use the SampledMetric base class.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricDefinition.DefaultValue">
            <summary>
            The default value to display for this event metric.  Typically this should be a trendable value.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricDefinition.Values">
            <summary>
            The set of values defined for this metric definition
            </summary>
            <remarks>Any number of different values can be recorded along with each event to provide additional trends and filtering ability
            for later client analysis.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEventMetricSample">
            <summary>
            One sample of a Event metric
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IEventMetricSample.ComputeValue(Loupe.Extensibility.Data.IEventMetricSample,Loupe.Extensibility.Data.IEventMetricValueDefinition)">
            <summary>
            Compute the resultant value for this sample compared with the provided baseline sample.
            </summary>
            <remarks>
            <para>The baseline sample must be for a date and time prior to this sample for correct results.</para>
            <para>If the supplied trendValue isn't trendable, the number of samples with a non-null value will be counted.</para>
            <para>If the supplied trendValue is trendable, the Default Trend (average or sum) will be calculated for all
            samples between the supplied baseline sample and this sample, inclusive.</para>
            </remarks>
            <param name="baselineSample">The previous baseline sample to calculate a difference for</param>
            <param name="trendValue">The definition of the value from this event metric to trend.</param>
            <returns>The calculated counter value</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricSample.Values">
            <summary>
            The array of values associated with this sample.  Any value may be a null object.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEventMetricValueDefinition">
            <summary>
            Defines one value that can be associated with an event metric.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.DefaultTrend">
            <summary>
            The default way that individual samples will be aggregated to create a graphable trend.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Definition">
            <summary>
            The metric definition this value is associated with.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Name">
            <summary>
            The unique name for this value within the event definition.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Caption">
            <summary>
            The end-user display caption for this value.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Description">
            <summary>
            The end-user description for this value.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Type">
            <summary>
            The simple type of all data recorded for this value.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.IsTrendable">
            <summary>
            Indicates whether the metric value can be graphed as a trend.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.UnitCaption">
            <summary>
            The units of measure for the data captured with this value (if trendable)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinition.Index">
            <summary>
            The index of this value definition (and related values) within the values collection.
            </summary>
            <remarks>Since sample values are provided as an object array it is useful to cache the 
            index of an individual value to rapidly retrieve specific values from each sample.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection">
            <summary>
            A collection of event values for the parent metric definition.
            </summary>
            <remarks>This object is automatically created by the Event Metric Definition and is accessible through the Values property.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection.Definition">
            <summary>
            The metric definition this value is associated with.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="name">The value name to locate in the collection</param>
            <returns>True if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection.TryGetValue(System.String,Loupe.Extensibility.Data.IEventMetricValueDefinition@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="name">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>True if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection.Item(System.String)">
            <summary>
            Retrieve a metric value definition by its name
            </summary>
            <param name="name">The value name to locate in the collection</param>
            <returns>The metric value definition.</returns>
            <remarks>Items are identified using ordinal, case insensitive string comparisons.  If no value exists with the provided name an exception will be thrown.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if no value exists with the provided name.</exception>
        </member>
        <member name="M:Loupe.Extensibility.Data.IEventMetricValueDefinitionCollection.IndexOf(System.String)">
            <summary>
            Retrieve the index of a metric value definition by its name
            </summary>
            <param name="name">The value name to locate in the collection</param>
            <remarks>Items are identified using ordinal, case insensitive string comparisons.  If no value exists with the provided name an exception will be thrown.</remarks>
            <exception cref="T:System.ArgumentNullException">Thrown if no value exists with the provided name.</exception>
        </member>
        <member name="T:Loupe.Extensibility.Data.IExceptionInfo">
            <summary>
            An interface which provides recorded information about an Exception.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IExceptionInfo.TypeName">
            <summary>
            The full name of the type of the Exception.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IExceptionInfo.Message">
            <summary>
            The Message string of the Exception.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IExceptionInfo.Source">
            <summary>
            A formatted string describing the source of an Exception.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IExceptionInfo.StackTrace">
            <summary>
            A string dump of the Exception stack trace information.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IExceptionInfo.InnerException">
            <summary>
            The information about this exception's inner exception (or null if none).
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IIssue">
            <summary>
            A single software problem being tracked by Loupe.
            </summary>
            <remarks>
            An issue ties together one or more application events for an application into a single software problem that needs
            to be investigated and resolved.  These are typically considered software defects.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Id">
            <summary>
            The unique key of this issue
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Name">
            <summary>
            The unique name of the issue
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Uri">
            <summary>
            The link to this item on the server
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Caption">
            <summary>
            A short display label for the issue.
            </summary>
            <remarks>Limited to 120 characters.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Description">
            <summary>
            An extended description of the issue
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Workaround">
            <summary>
            Optional.  A workaround for this issue.
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Status">
            <summary>
            The current status of this issue
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.StatusDisplay">
            <summary>
            Display information for the status
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.IsPublic">
            <summary>
            Indicates if the issue should be publicly viewable
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.PublicCaption">
            <summary>
            Optional.  If publicly viewable this caption is used instead of the main caption.
            </summary>
            <remarks>Limited to 120 characters.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.PublicDescription">
            <summary>
            Optional.  If publicly viewable this description is used instead of the main description.
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.PublicWorkaround">
            <summary>
            Optional.  If publicly viewable this workaround is used instead of the main workaround.
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.SessionCount">
            <summary>
            The total number of sessions affected by this issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.ComputerCount">
            <summary>
            The total number of computers affected by this issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.ApplicationUserCount">
            <summary>
            The total number of distinct users affected by this issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.UpdatedTimestamp">
            <summary>
            The timestamp of the last update to this issue
            </summary>
            <remarks>Does not consider updates to events or statistics.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.AddedTimestamp">
            <summary>
            The timestamp of when this issue was created.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Application">
            <summary>
            The application this issue is associated with.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.FixedIn">
            <summary>
            Optional. If this issue was resolved this is the version that it was resolved in.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.AddedBy">
            <summary>
            The user that added this issue
            </summary>
            <remarks>The LocalSystem user is used when the issue was created by a rule or Extension.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.AssignedTo">
            <summary>
            Optional.  The user that this issue is assigned to.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.UpdatedBy">
            <summary>
            The last user that updated this issue
            </summary>
            <remarks>The LocalSystem user is used when the issue was created by a rule or Extension.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.ApplicationEvents">
            <summary>
            The set of Application Events associated with this issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Links">
            <summary>
            The set of web links associated with this issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssue.Notes">
            <summary>
            The set of notes associated with this issue.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssue.AddNote(Loupe.Extensibility.Data.IssueNoteCategory,System.String,System.String)">
            <summary>
            Add a new note to this issue
            </summary>
            <param name="category">The note category (denotes system vs. user notes)</param>
            <param name="note">The text note of unlimited length.  Plain text is recommended.</param>
            <param name="userName">Optional.  The user name of the user to credit the message to</param>
            <returns>The new note that has been added</returns>
            <remarks>If adding a system note no user name need be provided (and any specified will be ignored).</remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssue.AddLink(Loupe.Extensibility.Data.IIssueLinkType,System.String,System.String)">
            <summary>
            Add a new link to this issue
            </summary>
            <param name="type">The link type for this issue.  This defines a template for each link</param>
            <param name="caption">The label to use in the UI for this link</param>
            <param name="value">A string value to insert into the template from the link type or a full URL if there is no template stored on the link type.</param>
            <returns>The new link that was added.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssue.ReOpen(System.String,System.String)">
            <summary>
            Reopens an issue that has been resolved or suppressed.
            </summary>
            <param name="note">Optional.  A text note of unlimited length.  Plain text is recommended.</param>
            <param name="userName">Optional.  The user name of the user to attribute the action to.</param>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssue.Resolve(Loupe.Extensibility.Data.IRepositoryApplicationVersion,System.String,System.String)">
            <summary>
            Resolve an issue that is new or active
            </summary>
            <param name="fixedInVersion">The application version where the fix for this issue was first included</param>
            <param name="note">Optional.  A text note of unlimited length.  Plain text is recommended.</param>
            <param name="userName">Optional.  The user name of the user to attribute the action to.</param>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssue.Suppress(System.String,System.String)">
            <summary>
            Suppress an issue so it will not be automatically reopened if it recurs.
            </summary>
            <param name="note">Optional.  A text note of unlimited length.  Plain text is recommended.</param>
            <param name="userName">Optional.  The user name of the user to attribute the action to.</param>
        </member>
        <member name="T:Loupe.Extensibility.Data.IIssueLink">
            <summary>
            A link from this issue to an external web address.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Id">
            <summary>
            The unique key for this link
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Caption">
            <summary>
            A display label for this link
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Value">
            <summary>
            The value to be provided to the issue link type to generate the full URL for this link.
            </summary>
            <remarks>This value is merged with the UrlTemplate on the Link Type to create the final URL.  
            if there is no URL Template specified on the link type then this should be a full URL, otherwise
            it will be inserted into the template as the first insertion value for a .NET format string.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Issue">
            <summary>
            The issue this link is associated with.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Type">
            <summary>
            The generator for this link
            </summary>
            <remarks>Link Types are individual generators for links to 
            help centralize URL management to external systems.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLink.Url">
            <summary>
            The fully qualified effective URL for this link.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IIssueLink.Remove">
            <summary>
            Remove this link from the issue
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IIssueLinkType">
            <summary>
            A single link generator
            </summary>
            <remarks>An issue link is rendered by combining the value on the link (if any)
            with the UrlFormat string to create the fully qualified URL.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLinkType.Name">
            <summary>
            The unique name of this link generator (not displayed)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLinkType.Sequence">
            <summary>
            The display order of links using this generator
            </summary>
            <remarks>When there are multiple links on an issue this controls the order they are presented in</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLinkType.Caption">
            <summary>
            A display label for links using this link type
            </summary>
            <remarks>Limited to 120 characters</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLinkType.Description">
            <summary>
            A description of this link generator
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueLinkType.UrlTemplate">
            <summary>
            A .NET string format for a single value to be inserted to generate the fully qualified URL
            </summary>
            <remarks>If null or empty then each link is assumed to use a fully qualified URL.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IIssueNote">
            <summary>
            A textual comment added to an issue.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.Id">
            <summary>
            The unique key for this note
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.Sequence">
            <summary>
            The order of this note within the issue
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.Note">
            <summary>
            The full note text
            </summary>
            <remarks>Not limited in length.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.AddedBy">
            <summary>
            The user that added this note
            </summary>
            <remarks>The LocalSystem user is used for system-generated notes</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.AddedTimestamp">
            <summary>
            The timestamp when this note was added.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.Issue">
            <summary>
            The issue this note is related to
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IIssueNote.Category">
            <summary>
            Indicates if a note was generated by the system or a user.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ILogEvent">
            <summary>
            A unique warning, error, or critical event in the log recorded by one or more log messages
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.ApplicationEvent">
            <summary>
            The application event for all similar log events
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.Severity">
            <summary>
            The severity of this event.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.CategoryName">
            <summary>
            The full name of the category where the messages were generated
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.ClassName">
            <summary>
            The full name of the class where the messages were generated
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.Caption">
            <summary>
            The calculated caption for this event, which may be shorter or different than the actual log messages
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.Occurrences">
            <summary>
            The total number of messages in this session that matched this event
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.FirstOccurrence">
            <summary>
            Partial details about the first log message that matches this event
            </summary>
            <remarks>
            	<para>Not all log message properties are available based on the limits of the LogEvent data structure. The following properties are not supported:</para>
            	<list type="table">
            		<listheader>
            			<term>Property</term>
            			<description>Description</description>
            		</listheader>
            		<item>
            			<term>DomainId</term>
            			<description>The unique identifier of the application domain.</description>
            		</item>
            		<item>
            			<term>DomainName</term>
            			<description>The name of the application domain.</description>
            		</item>
            		<item>
            			<term>Id</term>
            			<description>The Guid of the log message</description>
            		</item>
            		<item>
            			<term>IsBackground</term>
            			<description>Indicates if the thread is a background (non-UI) thread.</description>
            		</item>
            		<item>
            			<term>IsThreadPoolThread</term>
            			<description>Indicates if the thread is a thread pool thread.</description>
            		</item>
            		<item>
            			<term>LogSystem</term>
            			<description>The name of the log system originating the message.</description>
            		</item>
            		<item>
            			<term>Sequence</term>
            			<description>The sequence number of the log message within the session</description>
            		</item>
            		<item>
            			<term>ThreadId</term>
            			<description>The thread Id (a number that is unique at a moment in time within an application domain)</description>
            		</item>
            		<item>
            			<term>ThreadName</term>
            			<description>The name assigned to the thread, if any. </description>
            		</item>
            		<item>
            			<term>UserName</term>
            			<description>The identity associated with the log message.</description>
            		</item>
            	</list>
            	<para>If any of the above properties are referenced a NotSupportedException will be thrown.</para>
            	<para></para>
            </remarks>
            <seealso cref="T:Loupe.Extensibility.Data.ILogMessage"></seealso>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.LastOccurrenceTimestamp">
            <summary>
            The timestamp of the last log message in the session matching this event.
            </summary>
            <remarks><para>When part of a session is being analyzed this will reflect the entire session,
            not just the new data.</para></remarks> 
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogEvent.Uri">
            <summary>
            The link to this item on the server
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ILogEventCollection">
            <summary>
            A read-only collection of information describing one or more log events.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogEventCollection.Clear">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogEventCollection.Add(Loupe.Extensibility.Data.ILogEvent)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogEventCollection.Remove(Loupe.Extensibility.Data.ILogEvent)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogEventCollection.Insert(System.Int32,Loupe.Extensibility.Data.ILogEvent)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogEventCollection.RemoveAt(System.Int32)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ILogMessage">
            <summary>
            An interface for accessing log message data.
            </summary>
            <remarks>Most string properties of this interface (except where otherwise noted) will not return null values.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Session">
            <summary>
            The session this log message refers to
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Id">
            <summary>
            A Guid identifying this log message, unique across all sessions.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Sequence">
            <summary>
            The sequence number assigned to this log message, unique within this session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Timestamp">
            <summary>
            The timestamp of this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Severity">
            <summary>
            The severity of this log message (from Critical to Verbose).
            </summary>
            <remarks>Severities have lower numerical values the more severe a message is,
            with Critical = 1 and Verbose = 16 enabling numerical comparison to capture
            a given severity and worse or better.  For example, Severity &lt; LogMessageSeverity.Warning
            will match Error and Critical.  The enumeration values are the same as those used in the
            .NET Trace subsystem for equivalent severities.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.LogSystem">
            <summary>
            The log system which issued this log message.
            </summary>
            <remarks>Internally, Loupe generally uses &quot;Gibraltar&quot; for its own messages as well as those
            logged directly to the Log object, and &quot;Trace&quot; for messages captured via the .NET Trace subsystem.
            You can use your own value by using the Log.Write methods which are designed to enable forwarding messages
            from other log systems.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.CategoryName">
            <summary>
            The dot-delimited hierarchical category for this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.UserName">
            <summary>
            The user name associated with this log message (often just the user who started the process).
            </summary>
            <remarks>If user anonymization is enabled in configuration this will reflect the anonymous value.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Caption">
            <summary>
            The simple caption string for this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Description">
            <summary>
            The longer description for this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Details">
            <summary>
            The optional details XML for this log message (as a string).  (Or null if none.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.MethodName">
            <summary>
            The name of the method which originated this log message, unless unavailable.  (Can be null or empty.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.ClassName">
            <summary>
            The full name of the class containing this method which originated the log message, unless unavailable.  (Can be null or empty.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.FileName">
            <summary>
            The full path to the file containing this definition of the method which originated the log message, if available.  (Can be null or empty.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.LineNumber">
            <summary>
            The line number in the file at which the this message originated, if available.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.HasException">
            <summary>
            Whether or not this log message includes attached Exception information.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.Exception">
            <summary>
            The information about any Exception attached to this log message.  (Or null if none.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.ThreadId">
            <summary>
            The Managed Thread Id of the thread which originated this log message.
            </summary>
            <remarks>This is not the operating system thread Id as managed threads do not necessarily
            correspond to OS threads.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.ThreadName">
            <summary>
            The name of the thread which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.DomainId">
            <summary>
            The application domain identifier of the app domain which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.DomainName">
            <summary>
            The friendly name of the app domain which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.IsBackground">
            <summary>
            Indicates whether the thread which originated this log message is a background thread.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.IsThreadPoolThread">
            <summary>
            Indicates whether the thread which originated this log message is a Thread Pool thread.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.HasThreadInfo">
            <summary>
            Indicates if the log message has related thread information.  If false, some calls to thread information may throw exceptions.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.HasMethodInfo">
            <summary>
            Indicates if the class name and method name are available.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessage.HasSourceLocation">
            <summary>
            Indicates if the file name and line number are available.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ILogMessageCollection">
            <summary>
            A read-only collection of information describing one or more log messages.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogMessageCollection.Clear">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogMessageCollection.Add(Loupe.Extensibility.Data.ILogMessage)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogMessageCollection.Remove(Loupe.Extensibility.Data.ILogMessage)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogMessageCollection.Insert(System.Int32,Loupe.Extensibility.Data.ILogMessage)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ILogMessageCollection.RemoveAt(System.Int32)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ILogMessageCollection.Item(System.Guid)">
            <summary>
            Retrieve a lot message by its unique identifier
            </summary>
            <param name="key"></param>
            <returns>The log message with the specified Id.  If none is found an exception will be thrown.</returns>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetric">
            <summary>
            A single metric that has been captured.  A metric is a single measured value over time.  
            </summary>
            <remarks>
            To display the data captured for this metric, use Calculate Values to translate the raw captured data
            into displayable information.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Id">
            <summary>
            The unique Id of this metric instance.  This can reliably be used as a key to refer to this item.
            </summary>
            <remarks>The key can be used to compare the same metric across different instances (e.g. sessions).
            This Id is always unique to a particular instance.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Name">
            <summary>
            The fully qualified name of the metric being captured.  
            </summary>
            <remarks>The name is for comparing the same metric in different sessions. They will have the same name but 
            not the same Id.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Caption">
            <summary>
            A short caption of what the metric tracks, suitable for end-user display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Description">
            <summary>
            A description of what is tracked by this metric, suitable for end-user display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Definition">
            <summary>
            The definition of this metric object.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.MetricTypeName">
            <summary>
            The internal metric type of this metric definition
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.CategoryName">
            <summary>
            The category of this metric for display purposes.  Category is the top displayed hierarchy.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.CounterName">
            <summary>
            The display name of this metric (unique within the category name).
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.InstanceName">
            <summary>
            Gets or sets an instance name for this performance counter.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.IsDefault">
            <summary>
            Indicates whether this is the default metric instance for this metric definition or not.
            </summary>
            <remarks>The default instance has a null instance name.  This property is provided as a convenience to simplify
            client code so you don't have to distinguish empty strings or null.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.StartDateTime">
            <summary>
            The earliest start date and time of the raw data samples.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.EndDateTime">
            <summary>
            The last date and time of the raw data samples.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.SampleType">
            <summary>
            The sample type of the metric.  Indicates whether the metric represents discrete events or a continuous value.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetric.CalculateValues">
            <summary>
            Calculate displayable values based on the full information captured for this metric, 
            returning all dates available at the default interval.
            </summary>
            <remarks>
            The raw values may not be suitable for display depending on the unit the values are captured in, and
            depending on how the data was sampled it may not display well because of uneven sampling if processed
            directly.
            </remarks>
            <returns>A metric value set suitable for display</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetric.CalculateValues(Loupe.Extensibility.Data.MetricSampleInterval,System.Int32)">
            <summary>
            Calculate displayable values based on the full information captured for this metric with the specified interval 
            for all dates available
            </summary>
            <remarks>
            The raw values may not be suitable for display depending on the unit the values are captured in, and
            depending on how the data was sampled it may not display well because of uneven sampling if processed
            directly.
            </remarks>
            <param name="interval">The requested data sample size</param>
            <param name="intervals">The number of intervals to have between each value exactly.</param>
            <returns>A metric value set suitable for display</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetric.CalculateValues(Loupe.Extensibility.Data.MetricSampleInterval,System.Int32,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Calculate displayable values based on the full information captured for this metric
            </summary>
            <remarks>
            The raw values may not be suitable for display depending on the unit the values are captured in, and
            depending on how the data was sampled it may not display well because of uneven sampling if processed
            directly.
            </remarks>
            <param name="interval">The requested data sample size</param>
            <param name="intervals">The number of intervals to have between each value exactly.</param>
            <param name="startDateTime">The earliest date to retrieve data for</param>
            <param name="endDateTime">The last date to retrieve data for</param>
            <returns>A metric value set suitable for display</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetric.Samples">
            <summary>
            The set of raw samples for this metric
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricCollection">
            <summary>
            A collection of metrics, keyed by their unique ID and name
            </summary>
            <remarks>A metric has a unique ID to identify a particular instance of the metric (associated with one session) 
            and a name that is unique within a session but is designed for comparison of the same metric between sessions.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricCollection.ContainsKey(System.Guid)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the collection</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key">The metric name to locate in the collection</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricCollection.Definition">
            <summary>
            The metric definition that owns this dictionary, meaning every metric is a specific instance of this metric definition.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricCollection.TryGetValue(System.Guid,Loupe.Extensibility.Data.IMetric@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricCollection.TryGetValue(System.String,Loupe.Extensibility.Data.IMetric@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="key">The metric name to locate in the collection</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricCollection.Item(System.Guid)">
            <summary>
            Retrieve metric object by its Id
            </summary>
            <param name="Id"></param>
            <returns></returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricCollection.Item(System.String)">
            <summary>
            Retrieve metric object by its name
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricDefinition">
            <summary>
            The definition of a single metric that has been captured.  
            </summary>
            <remarks>
            Individual metrics capture a stream of values for a metric definition which can then be displayed and manipulated.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Id">
            <summary>
            The unique Id of this metric definition packet.  This can reliably be used as a key to refer to this item.
            </summary>
            <remarks>The key can be used to compare the same definition across different instances (e.g. sessions).
            This Id is always unique to a particular instance.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Name">
            <summary>
            The name of the metric definition being captured.  
            </summary>
            <remarks>The name is for comparing the same definition in different sessions. They will have the same name but 
            not the same Id.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Caption">
            <summary>
            A short display string for this metric definition, suitable for end-user display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Description">
            <summary>
            A description of what is tracked by this metric, suitable for end-user display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Interval">
            <summary>
            The recommended default display interval for graphing. 
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.MetricTypeName">
            <summary>
            The internal metric type of this metric definition
            </summary>
            <remarks>Metric types distinguish different metric capture libraries from each other, ensuring
            that we can correctly correlate the same metric between sessions and not require category names 
            to be globally unique.  If you are creating a new metric, pick your own metric type that will
            uniquely identify your library or namespace.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Definitions">
            <summary>
            The definitions collection that contains this definition.
            </summary>
            <remarks>This parent pointer should be used when walking from an object back to its parent instead of taking
            advantage of the static metrics definition collection to ensure your application works as expected when handling
            data that has been loaded from a database or data file.  The static metrics collection is for the metrics being
            actively captured in the current process, not for metrics that are being read or manipulated.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.Metrics">
            <summary>
            The set of metrics that use this definition.
            </summary>
            <remarks>All metrics with the same definition are of the same object type.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.CategoryName">
            <summary>
            The category of this metric for display purposes. This can be a period delimited string to represent a variable height hierarchy
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.CategoryNames">
            <summary>
            An array of the individual category names within the specified category name which is period delimited.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.CounterName">
            <summary>
            The display name of this metric (unique within the category name).
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricDefinition.SampleType">
            <summary>
            The sample type of the metric.  Indicates whether the metric represents discrete events or a continuous value.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricDefinitionCollection">
            <summary>
            A collection of metric definitions, keyed by their unique ID and name
            </summary>
            <remarks>
            <para>A metric definition has a unique ID to identify a particular instance of the definition(associated with one session) 
            and a name that is unique within a session but is designed for comparison of the same definition between sessions.</para>
            <para>This class is sealed because it is owned by either the single static active Log class (for metric collection in the current process)
            or during replay is automatically created as part of base objects and there is no way to inject an alternative implementation.</para>
            </remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.Metric(System.Guid)">
            <summary>
            Retrieve a metric given its unique Id.
            </summary>
            <param name="metricId">The unique Id of the metric to retrieve</param>
            <returns></returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.ContainsKey(System.Guid)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the collection</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="name">The metric name to locate in the collection</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.ContainsKey(System.String,System.String,System.String)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="metricTypeName">The unique metric type</param>
            <param name="categoryName">The name of the category with which this definition is associated.</param>
            <param name="counterName">The name of the definition within the category.</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.ContainsMetricKey(System.Guid)">
            <summary>
            Determines whether the collection contains an element with the specified key.
            </summary>
            <param name="key">The metric name to locate in the collection</param>
            <returns>true if the collection contains an element with the key; otherwise, false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.TryGetValue(System.Guid,Loupe.Extensibility.Data.IMetricDefinition@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.TryGetValue(System.String,Loupe.Extensibility.Data.IMetricDefinition@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="name">The metric name to locate in the collection</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.TryGetValue(System.String,System.String,System.String,Loupe.Extensibility.Data.IMetricDefinition@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="metricTypeName">The unique metric type</param>
            <param name="categoryName">The name of the category with which this definition is associated.</param>
            <param name="counterName">The name of the definition within the category.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.IMetricDefinitionCollection.TryGetMetricValue(System.Guid,Loupe.Extensibility.Data.IMetric@)">
            <summary>
            Retrieve an item from the collection by its key if present.  If not present, the default value of the object is returned.
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the collection contains an element with the specified key; otherwise false.</returns>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricSample">
            <summary>
            A single raw sample of a metric.  
            </summary>
            <remarks>
            Individual samples represent a single data point and may not be directly useful without
            manipulation.  For example, if the underlying metric is intended to be the rate of an event, the individual raw samples 
            will need to be used to calculate the rate instead of being used directly.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSample.Id">
            <summary>
            The unique id of this sample
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSample.Metric">
            <summary>
            The metric this sample relates to.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSample.Sequence">
            <summary>
            The increasing sequence number of all sample packets for this metric to be used as an absolute order sort.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSample.Timestamp">
            <summary>
            The exact date and time the metric was captured.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSample.Value">
            <summary>
            The raw value of the metric.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricSampleCollection">
            <summary>
            A collection of metric samples for a metric.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSampleCollection.Metric">
            <summary>
            The metric this collection of samples is related to
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSampleCollection.First">
            <summary>
            The first object in the collection
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricSampleCollection.Last">
            <summary>
            The last object in the collection
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricValue">
            <summary>
            A single display-ready metric value.  
            </summary>
            <remarks>
            This is the complementary object to a Metric Sample.  A Sample is a raw value that may require multiple
            samples to determine a display ready value.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.ValueCollection">
            <summary>
            The metric value set this value is part of.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.Timestamp">
            <summary>
            The exact date and time the metric was captured.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.LocalTimestamp">
            <summary>
            The date and time the metric was captured in the effective time zone.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.Value">
            <summary>
            The value of the metric.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.PercentageValue">
            <summary>
            The value of the metric, multiplied by 100.
            </summary>
            <remarks>Since percentage values span from 0 to 1 it may be more convenient to retrieve them scaled from 0 to 100.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValue.Sequence">
            <summary>
            The increasing sequence number of all sample packets for this metric to be used as an absolute order sort.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IMetricValueCollection">
            <summary>
            A set of display-ready values for a metric. 
            </summary>
            <remarks>
            These are after any necessary calculation or interpolation.
            To get a value set, use the Calculate method on a metric.  For best performance, specify the least accurate
            interval you need to graph.
            </remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.Caption">
            <summary>
            A display caption for this metric set.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.Description">
            <summary>
            A description of this metric set.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.Interval">
            <summary>
            The unit of intervals between samples.  If not set to default or shortest, see the Intervals property for how many intervals between samples.
            </summary>
            <remarks>To get a higher resolution data set in the case when the sample interval is not set to shortest, use the CalculateValues method on the metric.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.Intervals">
            <summary>
            The number of intervals between samples in the interval set.
            </summary>
            <remarks>This property is only meaningful if the sample interval is set to default or shortest.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.StartDateTime">
            <summary>
            The start date and time of this value set interval.  This may not represent all of the data available in the metric.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.EndDateTime">
            <summary>
            The end date and time of this value set interval.  This may not represent all of the data available in the metric.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.MinValue">
            <summary>
            The smallest value in the value set, useful for setting ranges for display.  The minimum value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.MinValueMetricValue">
            <summary>
            The metric object with the smallest value in the value set, useful for setting ranges for display.  The minimum value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.MaxValue">
            <summary>
            The largest value in the value set, useful for setting ranges for display.  The maximum value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.MaxValueMetricValue">
            <summary>
            The metric object with the largest value in the value set, useful for setting ranges for display.  The maximum value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.AverageValue">
            <summary>
            The average value in the value set, useful for setting ranges for display.  The average value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.PercentileValue">
            <summary>
            The 95th percentile value in the value set.  The percentile value may be negative.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IMetricValueCollection.UnitCaption">
            <summary>
            The display caption for the values in this set
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IPromotionLevel">
            <summary>
            A software promotion level used to distinguish different levels of maturity of application versions
            </summary>
            <remarks>Promotion levels typically indicate the role of a computer or application - such as development, certification, or production.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IPromotionLevel.Name">
            <summary>
            The unique name of this promotion level, used to refer to it in a session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IPromotionLevel.Sequence">
            <summary>
            The order of display for this promotion level in the set of levels.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IPromotionLevel.Caption">
            <summary>
            The display caption for this promotion level.
            </summary>
            <remarks>This value can be edited to change how the promotion level displays.  It defaults
            to the name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IPromotionLevel.Description">
            <summary>
            Optional. A description of this promotion level.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IReleaseType">
            <summary>
            Release types indicate the quality level and exposure of a release.
            </summary>
            <remarks>Use release types to indicate the role of a specific application build - ranging from the most 
            raw build which has had little or no testing (the lowest sequence release type) to the most public, 
            published build (the highest sequence release type).</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IReleaseType.Name">
            <summary>
            A unique name of this release type within the set of release types.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IReleaseType.Sequence">
            <summary>
            The order of this release type in the set of release types.  Higher values are closer to final release, lower are closer to development.
            </summary>
            <remarks>The lowest release type is the raw development release type, automatically used for each build.
            The highest release type is the most public, production release type.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IReleaseType.Caption">
            <summary>
            The display caption for this release type.
            </summary>
            <remarks>This value can be edited to change how the release type displays.  It defaults
            to the name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IReleaseType.Description">
            <summary>
            Optional. A description of this release type.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IRepositoryApplication">
            <summary>
            A single application within a product
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Name">
            <summary>
            The application name (unique within a product)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Caption">
            <summary>
            A display caption for this application (may not be unique)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Description">
            <summary>
            Optional. An extended description of this application.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Type">
            <summary>
            The type of application (Asp.Net, Windows, Service, etc.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Product">
            <summary>
            The product for this application
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.Versions">
            <summary>
            The set of versions for this application.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.UserMode">
            <summary>
            The application user tracking mode for this application
            </summary>
            <remarks>If the user mode is set to none then no user information will be available for the application.
            This is typical for background applications such as console applications and services.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplication.ProductApplicationCaption">
            <summary>
            An optimized combination of the product and application captions
            </summary>
            <remarks>Frequently the product and application captions are either identical or the application caption starts with the product caption.
            This property provides a combined caption that drops this duplication.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IRepositoryApplicationVersion">
            <summary>
            A single application version
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.Version">
            <summary>
            The version, unique within a particular application
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.DisplayVersion">
            <summary>
            The version to display
            </summary>
            <remarks>In some cases it's advisable to fudge a version number slightly - like when multiple sub versions
            are really the same software packaged differently or when a minor mistake was made and another version
            was shipped immediately.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.Caption">
            <summary>
            The display name of the version
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.Description">
            <summary>
            Optional.  An extended description of this version.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.ReleaseDate">
            <summary>
            Optional.  The date the version was published
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.ReleaseNotesUrl">
            <summary>
            Optional.  A full URL to release notes for this version
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.Application">
            <summary>
            The application this version relates to
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.PromotionLevel">
            <summary>
            Optional.  The promotion level specified for this version
            </summary>
            <remarks>If specified, all sessions will have this promotion level regardless of where they were run.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryApplicationVersion.ReleaseType">
            <summary>
            Designates the role of this version - from Internal (the lowest) to Release (the highest)
            </summary>
            <remarks>The set of release types is configurable on each server with new versions automatically designated to
            the lowest release type (Internal by default)</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.IRepositoryProduct">
            <summary>
            A single product
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryProduct.Name">
            <summary>
            The product name (will be unique)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryProduct.Caption">
            <summary>
            A display caption for this product (may not be unique)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IRepositoryProduct.Applications">
            <summary>
            The set of applications for this product.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ISampledMetricSample">
            <summary>
            One sample of a sampled metric
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISampledMetricSample.ComputeValue">
            <summary>
            Compute the resultant value for this sample.
            </summary>
            <remarks>
            This override is only useful if RequiresMultipleSamples is false.  In all other cases, you need to first
            identify a baseline sample to compare this sample with to determine the final value.
            </remarks>
            <returns>The calculated counter value</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISampledMetricSample.ComputeValue(Loupe.Extensibility.Data.ISampledMetricSample)">
            <summary>
            Compute the resultant value for this sample compared with the provided baseline sample
            </summary>
            <remarks>
            The baseline sample must be for a date and time prior to this sample for correct results.
            </remarks>
            <param name="baselineSample">The previous baseline sample to calculate a difference for</param>
            <returns>The calculated counter value</returns>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISampledMetricSample.RequiresMultipleSamples">
            <summary>
            Indicates whether two samples are required to calculate a metric value or not. 
            </summary>
            <remarks>
            Only a few counter types - notably the NumberOfItems types - are in their final form
            from a single sample.  All others require two samples to compare.
            </remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.ISession">
            <summary>
            Contains the log information for a single execution cycle
            </summary>
            <remarks>A session contains all of the thread, event, and metric information captured when it originally was executing
            and can be extended with analysis information including comments and markers.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Id">
            <summary>
            A constant, unique identifier for this session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Caption">
            <summary>
            A short end-user display caption 
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Description">
            <summary>
            An extended description without formatting.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.HasCorruptData">
            <summary>
            Indicates whether a session had errors during re-hydration and has lost some packets.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Status">
            <summary>
            The final status of the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.TopSeverity">
            <summary>
            The worst severity of the log messages in the session
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.MessageCount">
            <summary>
            The number of messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.CriticalCount">
            <summary>
            The number of critical messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.ErrorCount">
            <summary>
            The number of error messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.WarningCount">
            <summary>
            The number of warning messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Summary">
            <summary>
            Summary and common information about this session
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Threads">
            <summary>
            The list of threads associated with this session.  Threads are sorted by their thread Id and creation time.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Assemblies">
            <summary>
            The list of assemblies associated with this session.  Assemblies are sorted by their unique full names.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.Users">
            <summary>
            The list of application users associated with this session.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISession.GetMessages">
            <summary>
            The set of log messages for this session.
            </summary>
            <returns>An enumerable of the messages</returns>
            <remarks>This method provides an enumerable that reads the session data from the data file each time it is iterated
            so it won't consume excessive memory even if the file is very large or contains very large messages.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISession.MetricDefinitions">
            <summary>
            The set of all metrics tracked in this session.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ISessionAnalysis">
            <summary>
            The current analysis of the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionAnalysis.Session">
            <summary>
            The session this analysis applies to
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionAnalysis.LogEvents">
            <summary>
            The set of log events present in the data being analyzed
            </summary>
            <remarks>For sessions with multiple fragments this will just be the log event
            information from the current data being analyzed which may be only part of the 
            total data for the session.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionAnalysis.Users">
            <summary>
            The set of users for this session referenced in the current analysis
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionAnalysis.IsNewSession">
            <summary>
            Indicates if this is the first set of data being analyzed for this session.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ISessionSummary">
            <summary>An interface for accessing Summary information about the current session.</summary>
            <remarks>
            	<para>The session summary includes all of the information that is available in
                Loupe to categorize the session. This includes the product,
                application, and version information that was detected by Loupe (or overridden
                in the application configuration) as well as a range of information about the
                current computing environment (such as Operating System Family and process
                architecture).</para>
            </remarks>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummary.Session">
            <summary>
            Get a copy of the full session detail this session refers to.  
            </summary>
            <remarks>Session objects can be large in memory.  This method will return a new object
            each time it is called which should be released by the caller as soon as feasible to control memory usage.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Id">
            <summary>
            The unique Id of the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Uri">
            <summary>
            The link to this item on the server.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.IsNew">
            <summary>
            Indicates if the session has ever been viewed or exported.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.IsComplete">
            <summary>
            Indicates if all of the session data is stored that is expected to be available.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.IsLive">
            <summary>
            Indicates if the session is currently running and a live stream is available.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.HasData">
            <summary>
            Indicates if session data is available.
            </summary>
            <remarks>The session summary can be transfered separately from the session details
            and isn't subject to pruning so it may be around long before or after the detailed data is.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.TimeZoneCaption">
            <summary>
            The display caption of the time zone where the session was recorded.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.StartDateTime">
            <summary>
            The date and time the session started.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.DisplayStartDateTime">
            <summary>
            The date and time the session started.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.EndDateTime">
            <summary>
            The date and time the session ended or was last confirmed running in the time zone the user has requested for display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.DisplayEndDateTime">
            <summary>
            The date and time the session ended or was last confirmed running in the time zone the user has requested for display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Duration">
            <summary>
            The time range between the start and end of this session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.AddedDateTime">
            <summary>
            The date and time the session was added to the repository.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.DisplayAddedDateTime">
            <summary>
            The date and time the session was added to the repository in the time zone the user has requested for display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.UpdatedDateTime">
            <summary>
            The date and time the session header was last updated locally.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.DisplayUpdatedDateTime">
            <summary>
            The date and time the session header was last updated locally in the time zone the user has requested for display.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Caption">
            <summary>
            A display caption for the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Product">
            <summary>
            The product name of the application that recorded the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Application">
            <summary>
            The title of the application that recorded the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Environment">
            <summary>
            Optional.  The environment this session is running in.
            </summary>
            <remarks>Environments are useful for categorizing sessions, for example to 
            indicate the hosting environment. If a value is provided it will be 
            carried with the session data to upstream servers and clients.  If the 
            corresponding entry does not exist it will be automatically created.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.PromotionLevel">
            <summary>
            Optional.  The promotion level of the session.
            </summary>
            <remarks>Promotion levels are useful for categorizing sessions, for example to 
            indicate whether it was run in development, staging, or production. 
            If a value is provided it will be carried with the session data to upstream servers and clients.  
            If the corresponding entry does not exist it will be automatically created.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ApplicationType">
            <summary>
            The type of process the application ran as.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ApplicationDescription">
            <summary>
            The description of the application from its manifest.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ApplicationVersion">
            <summary>
            The version of the application that recorded the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.AgentVersion">
            <summary>
            The version of the Loupe Agent used to monitor the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.HostName">
            <summary>
            The host name / NetBIOS name of the computer that recorded the session.
            </summary>
            <remarks>Does not include the domain name portion of the fully qualified DNS name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.DnsDomainName">
            <summary>
            The DNS domain name of the computer that recorded the session.  May be empty.
            </summary>
            <remarks>Does not include the host name portion of the fully qualified DNS name.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.FullyQualifiedUserName">
            <summary>
            The fully qualified user name of the user the application was run as.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.UserName">
            <summary>
            The user Id that was used to run the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.UserDomainName">
            <summary>
            The domain of the user id that was used to run the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSVersion">
            <summary>
            The version information of the installed operating system (without service pack or patches).
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSServicePack">
            <summary>
            The operating system service pack, if any.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSCultureName">
            <summary>
            The culture name of the underlying operating system installation.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSArchitecture">
            <summary>
            The processor architecture of the operating system.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSBootMode">
            <summary>
            The boot mode of the operating system.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSPlatformCode">
            <summary>
            The OS Platform code, nearly always 1 indicating Windows NT.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSProductType">
            <summary>
            The OS product type code, used to differentiate specific editions of various operating systems.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSSuiteMask">
            <summary>
            The OS Suite Mask, used to differentiate specific editions of various operating systems.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSFamilyName">
            <summary>
            The well known operating system family name, like Windows Vista or Windows Server 2003.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSEditionName">
            <summary>
            The edition of the operating system without the family name, such as Workstation or Standard Server.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSFullName">
            <summary>
            The well known OS name and edition name.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.OSFullNameWithServicePack">
            <summary>
            The well known OS name, edition name, and service pack like Windows XP Professional Service Pack 3.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.RuntimeVersion">
            <summary>
            The version of the .NET runtime that the application domain is running as.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.RuntimeArchitecture">
            <summary>
            The processor architecture the process is running as.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.CurrentCultureName">
            <summary>
            The current application culture name.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.CurrentUICultureName">
            <summary>
            The current user interface culture name.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.MemoryMB">
            <summary>
            The number of megabytes of installed memory in the host computer.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Processors">
            <summary>
            The number of physical processor sockets in the host computer.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ProcessorCores">
            <summary>
            The total number of processor cores in the host computer.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.UserInteractive">
            <summary>
            Indicates if the session was run in a user interactive mode.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.TerminalServer">
            <summary>
            Indicates if the session was run through terminal server.  Only applies to User Interactive sessions.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ScreenWidth">
            <summary>
            The number of pixels wide of the virtual desktop.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ScreenHeight">
            <summary>
            The number of pixels tall for the virtual desktop.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ColorDepth">
            <summary>
            The number of bits of color depth.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.CommandLine">
            <summary>
            The complete command line used to execute the process including arguments.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ComputerId">
            <summary>
            Optional. The unique tracking Id of the computer that recorded this session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Status">
            <summary>
            The final status of the session.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.MessageCount">
            <summary>
            The number of messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.CriticalCount">
            <summary>
            The number of critical messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.ErrorCount">
            <summary>
            The number of error messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.WarningCount">
            <summary>
            The number of warning messages in the messages collection.
            </summary>
            <remarks>This value is cached for high performance and reflects all of the known messages.  If only part
            of the files for a session are loaded, the totals as of the latest file loaded are used.  This means the
            count of items may exceed the actual number of matching messages in the messages collection if earlier
            files are missing.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Properties">
            <summary>
            A copy of the collection of application specific properties. (Set via configuration at logging startup.  Do not modify here.)
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummary.Computer">
            <summary>
            Optional. Represents the computer that sent the session.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.ISessionSummaryCollection">
            <summary>
            A standard collection for session summaries that provides indexing by session id
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.ISessionSummaryCollection.Item(System.Guid)">
            <summary>
            get the item with the specified key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummaryCollection.Contains(System.Guid)">
            <summary>
            Indicates if the collection contains the key
            </summary>
            <param name="key"></param>
            <returns>True if a session summary with the key exists in the collection, false otherwise.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummaryCollection.Find(System.Predicate{Loupe.Extensibility.Data.ISessionSummary})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire List.</summary>
            <param name="match">The <see cref="T:System.Predicate`1">Predicate</see> delegate that defines the conditions of the elements to search for.</param>
            <remarks>
            The <see cref="T:System.Predicate`1">Predicate</see> is a delegate to a method that returns true if the object passed to it matches the
            conditions defined in the delegate. The elements of the current List are individually passed to the <see cref="T:System.Predicate`1">Predicate</see> delegate, moving forward in the List, starting with the first element and ending with the last element. Processing is
            stopped when a match is found.
            </remarks>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, null.</returns>
            <exception caption="Argument Null Exception" cref="T:System.ArgumentNullException">match is a null reference (Nothing in Visual Basic)</exception>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummaryCollection.FindAll(System.Predicate{Loupe.Extensibility.Data.ISessionSummary})">
            <summary>
            Retrieves all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1">Predicate</see> delegate that defines the conditions of the elements to search for.</param>
            <remarks>
            The <see cref="T:System.Predicate`1">Predicate</see> is a delegate to a method that returns true if the object passed to it matches the
            conditions defined in the delegate. The elements of the current List are individually passed to the <see cref="T:System.Predicate`1">Predicate</see> delegate, moving forward in the List, starting with the first element and ending with the last element.
            </remarks>
            <returns>A List containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty List.</returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummaryCollection.Remove(System.Guid)">
            <summary>
            Removes the first occurrence of a specified object
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Loupe.Extensibility.Data.ISessionSummaryCollection.TryGetValue(System.Guid,Loupe.Extensibility.Data.ISessionSummary@)">
            <summary>
            Attempt to get the item with the specified key, returning true if it could be found
            </summary>
            <returns>True if the item could be found, false otherwise</returns>
        </member>
        <member name="T:Loupe.Extensibility.Data.IssueNoteCategory">
            <summary>
            The category of a note on an issue to help format and display notes.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueNoteCategory.Unknown">
            <summary>
            The note category was not specified.
            </summary>
            <remarks>This value shouldn't occur in a running system</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueNoteCategory.System">
            <summary>
            The note was generated by the system itself
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueNoteCategory.User">
            <summary>
            The note was generated by a user.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IssueStatus">
            <summary>
            Available status of an issue.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.None">
            <summary>
            No value filter
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.Active">
            <summary>
            Issue is active.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.New">
            <summary>
            Issue is new.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.Resolved">
            <summary>
            Issue is resolved.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.Suppressed">
            <summary>
            Issue is suppressed.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.Open">
            <summary>
            Issue is open (active or new)
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.IssueStatus.Closed">
            <summary>
            Issue is closed (not active or new)
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IThreadInfo">
            <summary>
            An interface for accessing information about a thread.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.Session">
            <summary>
            The session this thread was recorded with
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.ThreadId">
            <summary>
            The managed thread ID of the thread which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.ThreadName">
            <summary>
            The name of the thread which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.DomainId">
            <summary>
            The application domain identifier of the app domain which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.DomainName">
            <summary>
            The friendly name of the app domain which originated this log message.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.IsBackground">
            <summary>
            Indicates whether the thread which originated this log message is a background thread.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IThreadInfo.IsThreadPoolThread">
            <summary>
            Indicates whether the thread which originated this log message is a threadpool thread.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IThreadInfoCollection">
            <summary>
            A read-only collection of information describing the threads loaded by the session.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IThreadInfoCollection.Clear">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IThreadInfoCollection.Add(Loupe.Extensibility.Data.IThreadInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IThreadInfoCollection.Remove(Loupe.Extensibility.Data.IThreadInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IThreadInfoCollection.Insert(System.Int32,Loupe.Extensibility.Data.IThreadInfo)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="M:Loupe.Extensibility.Data.IThreadInfoCollection.RemoveAt(System.Int32)">
            <summary>
            Not a valid operation.  This is a read-only collection.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.IUserProfile">
            <summary>
            A single user of the system
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.Id">
            <summary>
            The unique key for this user
            </summary>
            <remarks>This id is globally unique and invariant for a specific user account.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.UserName">
            <summary>
            The name used to authenticate to the system.
            </summary>
            <remarks>This is an alternate key for the user but is editable.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.UserCaption">
            <summary>
            A display caption for the user - often their full name.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.EmailAddress">
            <summary>
            The email address used to communicate with the user.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.UseHtmlEmail">
            <summary>
            Indicates if the user has requested HTML-formatted email when possible.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.Deleted">
            <summary>
            Indicates if the user account has been deleted.  
            </summary>
            <remarks>Loupe does a soft-delete in many cases to preserve the history of actions.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.PasswordFailures">
            <summary>
            The number of unsuccessful authentication attempts since the last successful log in.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.IsLockedOut">
            <summary>
            Indicates if the account has been locked out due to having too many password failures in a row.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.IsApproved">
            <summary>
            Indicates if the account has been approved and is now active.
            </summary>
            <remarks>This is used for deferred user creation</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.TimeZoneCode">
            <summary>
            Optional, The name of the time zone the user has elected to view timestamps in.   Overrides the repository default.
            </summary>
            <remarks>If null the repository-wide setting will be used.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.LastAccessTimestamp">
            <summary>
            The last time the user performed an authenticated action
            </summary>
            <remarks>For performance reasons this timestamp isn't updated on every single action, but will
            be within a few minutes of the last time they executed an API request.</remarks>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.CreatedTimestamp">
            <summary>
            The timestamp of when the user was created
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.LastLockedOutTimestamp">
            <summary>
            Optional.  The timestamp of the last time the account was locked out.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.LastPasswordChangeTimestamp">
            <summary>
            Optional.  The timestamp of the last time the password was changed.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.LastPasswordFailureTimestamp">
            <summary>
            Optional.  The timestamp of the last time the user failed to authenticate
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.Data.IUserProfile.Type">
            <summary>
            The type of user - ranging from system to virtual.
            </summary>
            <remarks>Not all user types can log into the system.  User type incorporate the role the user has with respect to the repository.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.LogMessageSeverity">
            <summary>
            This enumerates the severity levels used by Loupe log messages.
            </summary>
            <remarks>The values for these levels are chosen to directly map to the TraceEventType enum
            for the five levels we support.  These also can be mapped from Log4Net event levels,
            with slight name changes for Fatal->Critical and for Debug->Verbose.</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Unknown">
            <summary>
            The severity level is uninitialized and thus unknown.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Critical">
            <summary>
            Fatal error or application crash.
            </summary>
            <remarks>This is equal to TraceEventType.Critical.  This also corresponds to Log4Net's Fatal.</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Error">
            <summary>
            Recoverable error.
            </summary>
            <remarks>This is equal to TraceEventType.Error.  This also corresponds to Log4Net's Error.</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Warning">
            <summary>
            Noncritical problem.
            </summary>
            <remarks>This is equal to TraceEventType.Warning.  This also corresponds to Log4Net's Warning.</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Information">
            <summary>
            Informational message.
            </summary>
            <remarks>This is equal to TraceEventType. Information, This also corresponds to Log4Net's Information.</remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.LogMessageSeverity.Verbose">
            <summary>
            Debugging trace.
            </summary>
            <remarks>This is equal to TraceEventType.Verbose.  This also corresponds to Log4Net's Debug.</remarks>
        </member>
        <member name="T:Loupe.Extensibility.Data.MetricSampleInterval">
            <summary>
            The requested interval between value samples.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Default">
            <summary>
            Use the interval as the data was recorded.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Shortest">
            <summary>
            Use the interval as the data was recorded.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Millisecond">
            <summary>
            Use a sampling interval set in milliseconds
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Second">
            <summary>
            Use a sampling interval set in seconds.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Minute">
            <summary>
            Use a sampling interval set in minutes.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Hour">
            <summary>
            Use a sampling interval set in hours.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Day">
            <summary>
            Use a sampling interval set in days.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Week">
            <summary>
            Use a sampling interval set in weeks.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.MetricSampleInterval.Month">
            <summary>
            Use a sampling interval set in months.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.OSBootMode">
            <summary>
            Operating System Boot Mode
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.OSBootMode.Normal">
            <summary>
            Normal Boot Mode
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.OSBootMode.FailSafe">
            <summary>
            Failsafe Boot Mode
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.OSBootMode.FailSafeWithNetwork">
            <summary>
            Failsafe With Network Boot Mode
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.SampleType">
            <summary>
            The method of data collection done by the metric
            </summary>
            <remarks>
            Metrics are either sampled or event oriented.  Sampled metrics are well defined for all
            time between the start and end of the metric, meaning they have a value.  This value's accuracy compared to
            reality is dependent on the frequency of sampling (the Sample Interval).  For example, all Windows performance
            counter metrics are sampled metrics.
            Event metrics are undefined between occurrences.  For example, an IIS server log represents a set of event
            metric values - each one is an event that has additional information worth tracking, but the value is undefined
            between events.
            </remarks>
        </member>
        <member name="F:Loupe.Extensibility.Data.SampleType.Sampled">
            <summary>
            Metric values are contiguous samples of the measured value
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SampleType.Event">
            <summary>
            Metric values are isolated events with additional information.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.SessionCriteria">
            <summary>
            Selection criteria for session inclusion in a session package
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.None">
            <summary>
            Default. Includes no sessions.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.CompletedSessions">
            <summary>
            Include all sessions that are not actively running regardless of whether they've been sent before.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.NewSessions">
            <summary>
            Include sessions that have not been sent or opened before.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.CrashedSessions">
            <summary>
            Include sessions that failed to exit normally
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.CriticalSessions">
            <summary>
            Include sessions with one or more critical log message.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.ErrorSessions">
            <summary>
            Include sessions with one or more error message.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.WarningSessions">
            <summary>
            Include sessions with one or more warning message.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.ActiveSession">
            <summary>
            Include the session for the current process.
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionCriteria.AllSessions">
            <summary>
            Include all sessions including the session for the current process regardless of whether they've been sent before.
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.SessionStatus">
            <summary>
            The current known disposition of the session
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionStatus.Unknown">
            <summary>
            The final status of the session isn't known
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionStatus.Running">
            <summary>
            The application is still running
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionStatus.Normal">
            <summary>
            The application closed normally
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.SessionStatus.Crashed">
            <summary>
            The application closed unexpectedly
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.Data.UserType">
            <summary>
            The various levels of users in the system
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.Unknown">
            <summary>
            No user type has been specified
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.System">
            <summary>
            The internal system user
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.Virtual">
            <summary>
            A virtual user (only has an email address, can't access the system)
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.Reviewer">
            <summary>
            A lightweight reviewer user
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.Full">
            <summary>
            A normal user
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.Administrator">
            <summary>
            An administrator
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.CanLogIn">
            <summary>
            Users that have accounts
            </summary>
        </member>
        <member name="F:Loupe.Extensibility.Data.UserType.FullApplicationAccess">
            <summary>
            Users that can access all application-specific features
            </summary>
        </member>
        <member name="T:Loupe.Extensibility.IRepository">
            <summary>
            Provides methods for accessing and manipulating a repository of sessions
            </summary>
        </member>
        <member name="E:Loupe.Extensibility.IRepository.CollectionChanged">
            <summary>
            Raised every time the sessions collection changes.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Id">
            <summary>
            A unique id for this repository.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.IsDirty">
            <summary>
            Indicates if there are unsaved changes.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.IsReadOnly">
            <summary>
            Indicates if the repository is read only (sessions can't be added or removed).
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Name">
            <summary>
            The unique name for this repository (typically the file name or URI).
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Caption">
            <summary>
            A short end-user caption to display for the repository.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Description">
            <summary>
            An extended end-user description of the repository.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.SupportsFragments">
            <summary>
            Indicates if the repository supports fragment files or not.  Most do.
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Products">
            <summary>
            The set of products, applications, and versions loaded into the repository
            </summary>
        </member>
        <member name="P:Loupe.Extensibility.IRepository.Sessions">
            <summary>
            The set of all sessions in the repository.
            </summary>
            <remarks><para>This contains the summary information. To load the full contents of a
            a session where local data files are available use the LoadSession method.</para>
            <para>The supplied collection is a binding list and supports update events for the 
            individual sessions and contents of the repository.</para></remarks>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.GetSessionFileIds(System.Guid)">
            <summary>
            Retrieve the ids of the sessions files known locally for the specified session
            </summary>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.LoadSession(System.Guid)">
            <summary>
            Load a session by its Id
            </summary>
            <param name="sessionId">The unique Id of the session to be loaded.</param>
            <returns>A session object representing the specified session.  If no session can be
            found with the provided Id an exception will be thrown.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.LoadSessionStream(System.Guid)">
            <summary>
            Get a stream for the contents of an entire session
            </summary>
            <param name="sessionId">The unique Id of the session to retrieve the stream for.</param>
            <exception cref="T:System.IO.FileNotFoundException" caption="FileNotFoundException">Thrown if no session exists with the specified Id</exception>
            <returns>A stream that should be immediately copied and then disposed.  If no session could be found with the provided Id an exception will be thrown.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.LoadSessionFileStream(System.Guid,System.Guid)">
            <summary>
            Get a stream for the contents of a session file
            </summary>
            <param name="sessionId">The unique Id of the session to retrieve the stream for.</param>
            <param name="fileId">The unique Id of the session file to retrieve the stream for.</param>
            <exception cref="T:System.IO.FileNotFoundException" caption="FileNotFoundException">Thrown if no session exists with the specified Id</exception>
            <returns>A stream that should be immediately copied and then disposed.  If no file could be found with the provided Id an exception will be thrown.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.Remove(System.Guid)">
            <summary>
            Remove a session from the repository and all folders by its Id
            </summary>
            <param name="sessionId">The unique Id of the session to be removed</param>
            <returns>True if a session existed and was removed, false otherwise.</returns>
            <remarks>If no session is found with the specified Id then no exception is thrown.  Instead,
            false is returned.  If a session is found and removed True is returned.  If there is a problem
            removing the specified session (and it exists) then an exception is thrown.  The session will
            be removed from all folders that may reference it as well as user history and preferences.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.Remove(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Remove sessions from the repository and all folders by its Id
            </summary>
            <param name="sessionIds">An array of the unique Ids of the sessions to be removed</param>
            <returns>True if a session existed and was removed, false otherwise.</returns>
            <remarks>If no sessions are found with the specified Ids then no exception is thrown.  Instead,
            false is returned.  If at least one session is found and removed True is returned.  If there is a problem
            removing one or more of the specified sessions (and it exists) then an exception is thrown.  The sessions will
            be removed from all folders that may reference it as well as user history and preferences.</remarks>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.SessionDataExists(System.Guid)">
            <summary>
            Find if session data (more than just the header information) exists for a session with the provided Id
            </summary>
            <param name="sessionId">The unique Id of the session to be checked.</param>
            <returns>True if the repository has at least some session data in the repository, false otherwise.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.SessionDataExists(System.Guid,System.Guid)">
            <summary>
            Find if session data (more than just the header information) exists for a session with the provided Id
            </summary>
            <param name="sessionId">The unique Id of the session to be checked.</param>
            <param name="fileId">The file id to look for</param>
            <returns>True if the repository has at least some session data in the repository, false otherwise.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.SessionExists(System.Guid)">
            <summary>
            Find if a session exists with the provided Id
            </summary>
            <param name="sessionId">The unique Id of the session to be checked.</param>
            <returns>True if the session exists in the repository, false otherwise.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.SetSessionsNew(System.Collections.Generic.IList{System.Guid},System.Boolean)">
            <summary>
            Set or clear the New flag for a list of sessions
            </summary>
            <param name="sessionIds">The sessions to affect</param>
            <param name="isNew">True to mark the sessions as new, false to mark them as not new.</param>
            <returns>True if a session was changed, false otherwise.</returns>
        </member>
        <member name="M:Loupe.Extensibility.IRepository.Find(System.Predicate{Loupe.Extensibility.Data.ISessionSummary})">
            <summary>
            Retrieves all the sessions that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1">Predicate</see> delegate that defines the conditions of the sessions to search for.</param>
            <remarks>
            The <see cref="T:System.Predicate`1">Predicate</see> is a delegate to a method that returns true if the object passed to it matches the
            conditions defined in the delegate. The sessions of the repository are individually passed to the <see cref="T:System.Predicate`1">Predicate</see> delegate, moving forward in the List, starting with the first session and ending with the last session.
            </remarks>
            <returns>A List containing all the sessions that match the conditions defined by the specified predicate, if found; otherwise, an empty List.</returns>
        </member>
    </members>
</doc>
